name: Manage PR Code Reviewers

on:
  pull_request_review:
    types: [submitted] 
env:
  GITHUB_PR_NUMBER: ${{ github.event.pull_request.number }}
  GITHUB_REPOSITORY_NAME: ${{ github.event.repository.name }}
  
jobs:
  Manage-PR-Reviewers:
    runs-on: ubuntu-latest
    
    steps:
    
      - name: Retrieve PR Title
        run:  |
                restApiPRTitle=$(curl \
                                      -H "Accept: application/vnd.github.v3+json" \
                                      -H 'authorization: token ${{ secrets.GH_TOKEN }}' \
                                      https://api.github.com/repos/picsart/$GITHUB_REPOSITORY_NAME/pulls/$GITHUB_PR_NUMBER | jq  -r '.title')
                
                echo "prTitlefromAPI=$restApiPRTitle" >> $GITHUB_ENV
      
      - name: Login to JIRA
        if: github.event.pull_request.draft == false
        uses: atlassian/gajira-login@master
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
      
      - name: Find Jira Issue Id in commit messages
        if: github.event.pull_request.draft == false
        id: find
        uses: atlassian/gajira-find-issue-key@master
        with:
          string: "${{ env.prTitlefromAPI }}"
          from: ""
         
      - name: Stop workflow in case no matching in Jira
        if: steps.find.outputs.issue == ''
        run:  |
                echo 'No matching issue in Jira'
                exit 1     
     
      - name: Check if Jira issue status is 'Under Review'
        if: github.event.pull_request.draft == false && steps.find.outputs.issue != ''
        run: |
              restApiGETJiraIssueDetails=$(curl --request GET \
                  --url '${{ secrets.JIRA_BASE_URL }}/rest/api/3/issue/${{ steps.find.outputs.issue }}/' \
                  --user '${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}' \
                  --header 'Accept: application/json');
                  
              jira_Issue_Status=$(echo $restApiGETJiraIssueDetails | jq -r '.fields.status.name')
              
              jira_Issue_Type=$(echo $restApiGETJiraIssueDetails | jq -r '.fields.issuetype.name')
              echo "JiraIssueType=$jira_Issue_Type" >> $GITHUB_ENV

              
              if [[ ${jira_Issue_Status} != "Under Review" ]]; then
                echo 'The Jira status is' $jira_Issue_Status 'for Issue: if: steps.find.outputs.issue != ''. Cannot proceed when the status is not set to Under Review.'
                exit 1
              fi                         
      
      - name: Assess the PR Reviewers Count
        if: github.event.pull_request.draft == false && steps.find.outputs.issue != ''
        run:  |
                
                restApiGETGitHubReviewersDetails=$(curl \
                            -H "Accept: application/vnd.github.v3+json" \
                            -H 'authorization: token ${{ secrets.GH_TOKEN }}' \
                            https://api.github.com/repos/picsart/$GITHUB_REPOSITORY_NAME/pulls/$GITHUB_PR_NUMBER/reviews);
                  
                approverCount=$(echo $restApiGETGitHubReviewersDetails | jq 'group_by(.user.login) | map(select(max_by(.submitted_at) .state == "APPROVED")) | length')
                
                echo 'Number of approved reviewers:' $approverCount
                
                if [[ ${jira_Issue_Status} == "Approved" && "$approverCount" -ge 2 ]]; then
                  #do not fail the workflow in case the status is Approved and 2 reviewers have already approved
                  echo 'The Jira status is ' $jira_Issue_Status '. Since the minimum number of reviewers has been passed, do not fail the workflow.'
                else
                
                  if [[ ${jira_Issue_Status} != "Under Review" ]]; then
                    echo 'The Jira status is' $jira_Issue_Status '. Cannot proceed when the status is not set to Under Review.'
                    exit 1
                  fi
                  
                  if [[ "$approverCount" -lt 2 ]]; then
                    echo 'More reviewers are needed in order for this Jira item to progress within its workflow.'
                    exit 1
                  else
                    echo 'Minimum number of code reviewers passed. Change assignee and status.'
                    echo "CodeReviewDone=true" >> $GITHUB_ENV
                    
                    #Change the Jira issue status to Approved
                    curl -D- -u ${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }} \
                      -X POST --data '{"transition":{"id":"91"}}' \
                      -H "Content-Type: application/json" ${{ secrets.JIRA_BASE_URL }}/rest/api/3/issue/${{ steps.find.outputs.issue }}/transitions 
                  fi
                fi
