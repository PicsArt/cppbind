name: SonarCloud

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  cleanup-runs:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - uses: rokroskar/workflow-run-cleanup-action@v0.3.3
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  sonar-check:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    needs: cleanup-runs


    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f src/requirements.txt ]; then pip install -r src/requirements.txt; fi
          sudo apt-get update && sudo apt-get install -y libclang-12-dev nlohmann-json3-dev
          python setup.py install

      - name: Download sonar
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.4.0.2170-linux.zip
          unzip -o sonar-scanner-cli-4.4.0.2170-linux.zip

      - name: Collect coverage info
        run: |
          coverage run -m pytest ./src/test
          coverage xml

      - name: Run sonar
        run: |
          export PATH=$PWD/sonar-scanner-4.4.0.2170-linux/bin:$PATH
          sonar-scanner -Dsonar.projectKey=PicsArt_cppbind \
                        -Dsonar.organization=picsart \
                        -Dsonar.host.url=https://sonarcloud.io \
                        -Dsonar.projectName=cppbind \
                        -Dsonar.sources=src/cppbind,src/cppbind/config/rules,src/cppbind/config/std_helpers/python \
                        -Dsonar.exclusions=src/cppbind/config/** \
                        -Dsonar.python.coverage.reportPaths=coverage.xml
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
