/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 12/07/2021-16:12.
 * Please do not change it manually.
 */

#include <string.h>
#include <memory>
#include "swift/wrappers/hello/c_host.h"
#include "cxx/host.hpp"
#include "cxx/user.hpp"


void release_Host(void* _Nonnull cself) {
    delete static_cast<Host*>(cself);
}

void* _Nonnull create_Host(ErrorObj* _Nonnull err){
    try {
        auto this_object = new Host();
        return this_object;
    }
    catch (const std::exception& e) {
        err->err_type = 1;
        err->err_ptr = new std::exception(e);
    }
    catch (...) {
        err->err_type = -1;
    }
    void* result = nullptr;
    return result;
}

char* _Nonnull _func_Host_hello(void* _Nonnull cself, void* _Nonnull user, ErrorObj* _Nonnull err){
    
    auto& ctocxxuser = *static_cast<UserInfo*>(user);
  
    
    auto ctocxxcself = static_cast<Host*>(cself);
    try {
        const auto& result = ctocxxcself->hello(ctocxxuser);
        auto cxxtocresult = strdup(result.data());
        return cxxtocresult;
    }
    catch (const std::exception& e) {
        err->err_type = 1;
        err->err_ptr = new std::exception(e);
    }
    catch (...) {
        err->err_type = -1;
    }
    char* result = nullptr;
    return result;
}

char* _Nonnull _func_Host_welcome(void* _Nonnull cself, void* _Nonnull user, ErrorObj* _Nonnull err){
    
    auto& ctocxxuser = *static_cast<UserInfo*>(user);
  
    
    auto ctocxxcself = static_cast<Host*>(cself);
    try {
        const auto& result = ctocxxcself->welcome(ctocxxuser);
        auto cxxtocresult = strdup(result.data());
        return cxxtocresult;
    }
    catch (const std::exception& e) {
        err->err_type = 1;
        err->err_ptr = new std::exception(e);
    }
    catch (...) {
        err->err_type = -1;
    }
    char* result = nullptr;
    return result;
}