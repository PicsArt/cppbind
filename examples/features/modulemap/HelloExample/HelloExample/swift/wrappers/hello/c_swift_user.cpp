/**
 *   ______ .______   .______   .______    __  .__   __.  _______  
 *  /      ||   _  \  |   _  \  |   _  \  |  | |  \ |  | |       \ 
 * |  ,----'|  |_)  | |  |_)  | |  |_)  | |  | |   \|  | |  .--.  |
 * |  |     |   ___/  |   ___/  |   _  <  |  | |  . `  | |  |  |  |
 * |  `----.|  |      |  |      |  |_)  | |  | |  |\   | |  '--'  |
 *  \______|| _|      | _|      |______/  |__| |__| \__| |_______/ 
 * 
 * This file is generated by cppbind on 09/06/2022-11:34.
 * Please do not change it manually.
 */

#include <iostream>
#include <stdlib.h>
#include <string.h>
#include <cxxabi.h>
#include <memory>
#include <type_traits>
#include "swift/wrappers/hello/c_swift_user.h"
#include "cxx/user.hpp"

extern const char* CPPBIND_STD_STDEXCEPTION;

const char* CPPBIND_USERINFO = "UserInfo";


void release_UserInfo(CppBindCObject cself, bool owner) {
    if (owner) {
        delete static_cast<UserInfo*>(cself.ptr);
    }
    free(cself.type);
}

CppBindCObject create_UserInfo(char* _Nonnull user_name, unsigned int user_age, CppBindCObject* _Nonnull cppbind_err) {
    auto ctocxxuser_name = std::string(user_name);
    free(user_name);
    try {
        auto this_object = new UserInfo(ctocxxuser_name, user_age);
        return {strdup(CPPBIND_USERINFO), this_object};
    } catch (const std::exception& e) {
        cppbind_err->type = strdup(CPPBIND_STD_STDEXCEPTION);
        cppbind_err->ptr = new std::exception(e);
    } catch (...) {
        cppbind_err->type = strdup("Uncaught Exception");
    }
    CppBindCObject result {};
    return result;
}

unsigned int _prop_get_UserInfo_age(CppBindCObject cself) {
    auto ctocxxcself = static_cast<UserInfo*>(cself.ptr);
    decltype(auto) result = ctocxxcself->age;
    
    return result;
}

char* _Nonnull _prop_get_UserInfo_name(CppBindCObject cself) {
    auto ctocxxcself = static_cast<UserInfo*>(cself.ptr);
    decltype(auto) result = ctocxxcself->name;
    auto cxxtocresult = strdup(result.data());
    return cxxtocresult;
}

bool _prop_get_UserInfo_want_a_drink(CppBindCObject cself) {
    auto ctocxxcself = static_cast<UserInfo*>(cself.ptr);
    decltype(auto) result = ctocxxcself->want_a_drink;
    
    return result;
}

void _prop_set_UserInfo_want_a_drink(CppBindCObject cself, bool want_a_drink) {
    
    auto ctocxxcself = static_cast<UserInfo*>(cself.ptr);
    
    ctocxxcself->want_a_drink = want_a_drink;
}

