rules:
  swift.type_converters:
    nlohmann::json:
      custom:
        is_c_pointer_type: False
        tname: JSON
      types:
        swift: String
        c: char * _Nullable
        sc: UnsafeMutablePointer<CChar>
      converters:
        c_to_cxx: |
          auto {{target_name}} = nlohmann::json::parse({{name}});
          free({{name}});
        cxx_to_c: |
          auto {{name}}_str = {{name}}.dump();
          auto {{target_name}} = strdup({{name}}_str.c_str());
        swift_to_sc: |
          let {{target_name}} = strdup({{name}})!
        sc_to_swift: |
          let {{target_name}} = String(cString: {{name}}!)
          defer {
            {{name}}!.deallocate()
          }

  kotlin.type_converters:
    nlohmann::json:
      custom:
        pname: Object
        tname: JSON
      types:
        kotlin: String
        jni: jstring
        jdk: String
      converters:
        jni_to_cxx: |
          auto {{target_name}} = nlohmann::json::parse(iegen::jni_to_string(env, {{name}}))
        cxx_to_jni: |
          {{target_type_name}} {{target_name}} = iegen::string_to_jni(env, {{name}}.dump(4));
        kotlin_to_jdk:
        jdk_to_kotlin:

    json:
      nlohmann::json
