rules:
  swift.type_converters:
    nlohmann::json:
      custom:
        is_c_pointer_type: False
      swift:
        type_info: String
      c:
        type_info: char * _Nullable
      sc:
        type_info: UnsafeMutablePointer<CChar>
      c_to_cxx: |
        auto {{target_name}} = nlohmann::json::parse({{name}});
        free({{name}});
      cxx_to_c: |
        auto {{name}}_str = {{name}}.dump();
        auto {{target_name}} = strdup({{name}}_str.c_str());
      swift_to_sc: |
        let {{target_name}} = strdup({{name}})!
      sc_to_swift: |
        let {{target_name}} = String(cString: {{name}}!)
        defer {
          {{name}}!.deallocate()
        }

  kotlin.type_converters:
    nlohmann::json:
      custom:
        pname: json
      kotlin:
        type_info: String
      jni:
        type_info: jstring
      jdk:
        type_info: String
      jni_to_cxx: |
        auto {{target_name}} = nlohmann::json::parse(iegen::jni_to_string(env, {{name}}))
      cxx_to_jni: |
        {{target_type_name}} {{target_name}} = iegen::string_to_jni(env, {{name}}.dump(4));
      kotlin_to_jdk:
      jdk_to_kotlin:

    json:
      nlohmann::json
