# three ways to describe directory actions
dir_vars:
  - dir: "."
    vars:
      action: gen_package
      name: simple
      python.code_fragment:
        - import json
        - >
          def pretty_print(json_str):
              parsed = json.loads(json_str)
              print(json.dumps(parsed, indent=4, sort_keys=True))

  - dir: "/cxx/overloads"
    vars:
      action: gen_package
      name: overloads
      python.code_fragment:
        - import json
        - >
          def pretty_print(json_str):
              parsed = json.loads(json_str)
              print(json.dumps(parsed, indent=4, sort_keys=True))

  - dir: "../operators"
    vars:
      action: gen_package
      name: operators
      python.code_fragment:
        - import json
        - >
          def pretty_print(json_str):
              parsed = json.loads(json_str)
              print(json.dumps(parsed, indent=4, sort_keys=True))

file_vars:
  - file: "./root.hpp"
    vars:
      package: simple

vars: |
  {%- set out_prj_dir = "." -%}
  out_prj_dir: {{out_prj_dir}}
  src_glob:
    - cxx/**/*.h*
  include_dirs:
    - .
  kotlin.clang_args:
    - -D__ANDROID__
  kotlin.file_postfix: ""
  kotlin.cxx_out_dir: {{path.join(out_prj_dir, "kotlin/wrappers")}}
  kotlin.out_dir: {{path.join(out_prj_dir, "kotlin/src/main/java")}}
  kotlin.package_prefix: com.examples
  kotlin.src_exclude_glob:
    - cxx/functionals/*.hpp
    - cxx/optionals/*.h*
    - cxx/getters/*template_getter.hpp
  python.cxx_out_dir: {{path.join(out_prj_dir, "python/wrappers")}}
  python.file_postfix: _pygen
  python.out_dir: {{path.join(out_prj_dir, "python/src")}}
  python.package_prefix: ""
  python.pybind_module: examples
  swift.file_postfix: _swgen
  swift.package_prefix: ""
  swift.cxx_out_dir:  {{path.join(out_prj_dir, "swift/wrappers")}}
  swift.out_dir:  {{path.join(out_prj_dir, "swift/src")}}
  swift.src_exclude_glob:
    - cxx/functionals/*.hpp
    - cxx/optionals/*.h*
    - cxx/getters/*template_getter.hpp

var_def:
  !join
  - !include variable_definitions.yaml
  - prefix:
      inheritable: true
      default: prefix
      allowed_on: [ class, class_template, struct, struct_template, enum ]
