/**
 *   ______ .______   .______   .______    __  .__   __.  _______  
 *  /      ||   _  \  |   _  \  |   _  \  |  | |  \ |  | |       \ 
 * |  ,----'|  |_)  | |  |_)  | |  |_)  | |  | |   \|  | |  .--.  |
 * |  |     |   ___/  |   ___/  |   _  <  |  | |  . `  | |  |  |  |
 * |  `----.|  |      |  |      |  |_)  | |  | |  |\   | |  '--'  |
 *  \______|| _|      | _|      |______/  |__| |__| \__| |_______/ 
 * 
 * This file is generated by cppbind on 08/08/2022-16:07.
 * Please do not change it manually.
 */

package com.examples.basic_types

import com.examples.cppbind.*
import com.examples.cppbind.exception_helpers.*

private val INIT = run {
    System.loadLibrary("wrapper_jni");
}

fun add(a: Short, b: Short): Short {
    val result = jAdd(a, b)
    
    return result
}

@JvmName("add1")
fun add(v: List<Short>, a: Short): List<Short> {
    val kotlintojdkv = ShortArray(v.size) 
    var indexV = 0
    for (valueV in v) {
        
        kotlintojdkv[indexV] = valueV
        ++indexV
    }
    val result = jAdd1(kotlintojdkv, a, v)
    val jdktokotlinresult: MutableList<Short> = mutableListOf()
    for (valueResult in result) {
        
        jdktokotlinresult.add(valueResult)
    }
    return jdktokotlinresult
}

@JvmName("add2")
fun add(p1: Pair<Short, Short>, p2: Pair<Short, Short>): Pair<Short, Short> {
    val firstP1 = p1.first
    val secondP1 = p1.second


    val kotlintojdkp1 = Pair<Short, Short>(firstP1, secondP1)
    val firstP2 = p2.first
    val secondP2 = p2.second


    val kotlintojdkp2 = Pair<Short, Short>(firstP2, secondP2)
    val result = jAdd2(kotlintojdkp1, kotlintojdkp2, p1, p2)
    val firstResult = result.first
    val secondResult = result.second


    val jdktokotlinresult = Pair<Short, Short>(firstResult, secondResult)
    return jdktokotlinresult
}

private external fun jAdd(a: Short, b: Short, vararg extraObjs: Any?): Short
private external fun jAdd1(v: ShortArray, a: Short, vararg extraObjs: Any?): ShortArray
private external fun jAdd2(p1: Pair<Short, Short>, p2: Pair<Short, Short>, vararg extraObjs: Any?): Pair<Short, Short>

private external fun jGettypebyid(id: Long): String
