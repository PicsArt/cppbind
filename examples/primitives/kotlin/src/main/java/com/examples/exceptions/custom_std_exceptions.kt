/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 10/22/2021-13:59.
 * Please do not change it manually.
 */

package com.examples.exceptions

import alias.*
import com.examples.exception_helpers.*
import exceptionUtils.*
import kotlin.system.exitProcess

open class SystemError
internal constructor(_id: Long) : StdException(_id) {
    companion object {
        
        /**
         * comments
         * 
         */
        protected fun construct_helper(message: String): Long {
            val id = jConstructor(message)
            return id
        }

        @JvmStatic
        private external fun jConstructor(message: String): Long
    }
    
    
    /**
     * comments
     * 
     */
    constructor(message: String): this(construct_helper(message)) {
    }
    
    /**
     * comments
     * 
     */
    open override fun what(): String {
        val result = jWhat(getObjId())
        
        return result
    }

    ///// External wrapper functions ////////////
    private external fun jWhat(id: Long): String
}

open class FileError
internal constructor(_id: Long) : SystemError(_id) {
    companion object {
        
        protected fun construct_helper(message: String): Long {
            val id = jConstructor(message)
            return id
        }

        @JvmStatic
        private external fun jConstructor(message: String): Long
    }
    
    
    constructor(message: String): this(construct_helper(message)) {
    }
    
    /**
     * comments
     * 
     */
    open override fun what(): String {
        val result = jWhat(getObjId())
        
        return result
    }

    ///// External wrapper functions ////////////
    private external fun jWhat(id: Long): String
}