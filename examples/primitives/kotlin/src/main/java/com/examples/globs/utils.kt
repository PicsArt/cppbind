/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 12/16/2021-09:30.
 * Please do not change it manually.
 */

package com.examples.globs

import com.examples.iegen.alias.*
import com.examples.iegen.exceptionUtils.*
import com.examples.iegen.exception_helpers.*
import com.examples.simple.Project
import com.examples.simple.Root

val INIT = run {
    System.loadLibrary("wrapper_jni");
}

/**
 * A global function example.
 */
fun concat(str1: String, str2: String): String {
    val result = jConcat(str1, str2)
    
    return result
}

/**
 * A global function example.
 */
fun concat(str1: String, str2: String, str3: String): String {
    val result = jConcat_1(str1, str2, str3)
    
    return result
}

/**
 * A global template function example.
 */
fun max(arg0: Int, arg1: Int): Int {
    val result = jMaxInt(arg0, arg1)
    
    return result
}

/**
 * A global template function example.
 */
fun max(arg0: String, arg1: String): String {
    val result = jMaxString(arg0, arg1)
    
    return result
}

/**
 * A global template function example.
 */
fun makePair(arg0: Project, arg1: Project): Pair<Project, Project> {
    val kotlintojdkarg0 = arg0.id
    val kotlintojdkarg1 = arg1.id
    val result = jMakepairProjectProject(kotlintojdkarg0, kotlintojdkarg1)
    val first_result = result.first
    val second_result = result.second
    val jdktokotlinfirst_result = Project(first_result)
    val jdktokotlinsecond_result = Project(second_result)
    val jdktokotlinresult = Pair<Project, Project>(jdktokotlinfirst_result, jdktokotlinsecond_result)
    return jdktokotlinresult
}

/**
 * A global template function example.
 */
fun makePair(arg0: Root, arg1: Project): Pair<Root, Project> {
    val kotlintojdkarg0 = arg0.id
    val kotlintojdkarg1 = arg1.id
    val result = jMakepairRootProject(kotlintojdkarg0, kotlintojdkarg1)
    val first_result = result.first
    val second_result = result.second
    val jdktokotlinfirst_result = Root(first_result)
    val jdktokotlinsecond_result = Project(second_result)
    val jdktokotlinresult = Pair<Root, Project>(jdktokotlinfirst_result, jdktokotlinsecond_result)
    return jdktokotlinresult
}

private external fun jConcat(str1: String, str2: String): String
private external fun jConcat_1(str1: String, str2: String, str3: String): String
private external fun jMaxInt(arg0: Int, arg1: Int): Int
private external fun jMaxString(arg0: String, arg1: String): String
private external fun jMakepairProjectProject(arg0: Long, arg1: Long): Pair<Long, Long>
private external fun jMakepairRootProject(arg0: Long, arg1: Long): Pair<Long, Long>