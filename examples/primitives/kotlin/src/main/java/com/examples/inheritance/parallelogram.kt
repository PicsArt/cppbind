/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 10/25/2021-13:08.
 * Please do not change it manually.
 */

package com.examples.inheritance

import alias.*
import com.examples.exception_helpers.*
import exceptionUtils.*


interface IParallelogram : AutoCloseable {
    val id: Long
    
    open val area: Double
        get() {
            val result = IParallelogramHelper.jArea(id)
            
            return result
        }
    
    open fun perimeter(): Double {
        val result = IParallelogramHelper.jPerimeter(id)
        
        return result
    }
}


class IParallelogramHelper {
    companion object {
        @JvmStatic
        external fun jArea(id: Long): Double
        @JvmStatic
        external fun jPerimeter(id: Long): Double
    }
}


open class ParallelogramImpl
internal constructor(_id: Long) : IParallelogram {
    companion object {
        init {
            System.loadLibrary("wrapper_jni");
        }
        
    }

    protected var ObjId = _id
    override val id: Long
        get() {
            if (ObjId == 0L) {
                throw RuntimeException("Object is not allocated")
            }
            return ObjId
        }

    override fun close() {
        if (ObjId != 0L) {
            jFinalize(ObjId)
            ObjId = 0L
        }
    }

    /**
    * Finalize and deletes the object
    */
    protected fun finalize() {
        close()
    }
    
    ///// External wrapper functions ////////////
    private external fun jFinalize(id: Long): Unit
}