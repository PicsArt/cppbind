/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 10/25/2021-13:08.
 * Please do not change it manually.
 */

package com.examples.templates

import alias.*
import com.examples.exception_helpers.*
import com.examples.simple.Root
import exceptionUtils.*

/**
 * comments
 * 
 */
open class Component
internal constructor(_id: Long) : IAddressableRoot, AutoCloseable {
    companion object {
        init {
            System.loadLibrary("wrapper_jni");
        }
        
        /**
         * comments
         * 
         */
        protected fun construct_helper(parent: Root, name: String): Long {val kotlin_to_jdk_parent = parent.id
            val id = jConstructor(kotlin_to_jdk_parent, name)
            return id
        }

        @JvmStatic
        private external fun jConstructor(parent: Long, name: String): Long
    }
    
    protected var ObjId = _id
    override val id: Long
        get() {
            if (ObjId == 0L) {
                throw RuntimeException("Object is not allocated")
            }
            return ObjId;
        }
    
    /**
     * comments
     * 
     */
    constructor(parent: Root, name: String): this(construct_helper(parent, name)) {
    }

    override fun close() {
        if (ObjId != 0L) {
            jFinalize(ObjId)
            ObjId = 0L
        }
    }

    /**
     * Finalize and deletes the object
     */
    protected fun finalize() {
        close()
    }
    private external fun jFinalize(id: Long): Unit
}