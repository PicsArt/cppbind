/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 04/25/2022-05:38.
 * Please do not change it manually.
 */

package com.examples.templates

import com.examples.iegen.alias.*
import com.examples.iegen.exceptionUtils.*
import com.examples.iegen.exception_helpers.*
import com.examples.simple.Project
import com.examples.simple.Task

/**
 * An example of a type derived from a template.
 */
open class MyStackProject
internal constructor(obj: IEGenObject) : StackPrj(obj) {
    companion object {
        
        protected fun construct_helper(): Long {
            val id = jConstructor()
            return id
        }

        @JvmStatic
        private external fun jConstructor(): Long
        const val iegenCxxTypeName: String = "iegen::example::MyStack<iegen::example::Project>"
    }
    
    
    constructor(): this(IEGenObject(construct_helper(), true)) {
    }
}

/**
 * An example of a type derived from a template.
 */
open class MyStackTask
internal constructor(obj: IEGenObject) : StackTask(obj) {
    companion object {
        
        protected fun construct_helper(): Long {
            val id = jConstructor()
            return id
        }

        @JvmStatic
        private external fun jConstructor(): Long
        const val iegenCxxTypeName: String = "iegen::example::MyStack<iegen::example::Task>"
    }
    
    
    constructor(): this(IEGenObject(construct_helper(), true)) {
    }
}

private external fun jGettypebyid(id: Long): String
