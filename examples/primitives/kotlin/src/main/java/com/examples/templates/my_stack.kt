/**
 *   ______ .______   .______   .______    __  .__   __.  _______  
 *  /      ||   _  \  |   _  \  |   _  \  |  | |  \ |  | |       \ 
 * |  ,----'|  |_)  | |  |_)  | |  |_)  | |  | |   \|  | |  .--.  |
 * |  |     |   ___/  |   ___/  |   _  <  |  | |  . `  | |  |  |  |
 * |  `----.|  |      |  |      |  |_)  | |  | |  |\   | |  '--'  |
 *  \______|| _|      | _|      |______/  |__| |__| \__| |_______/ 
 * 
 * This file is generated by cppbind on 11/10/2022-06:59.
 * Please do not change it manually.
 */

package com.examples.templates

import com.examples.cppbind.*
import com.examples.cppbind.exceptions.*
import com.examples.simple.Project
import com.examples.simple.task.Task

/**
 * An example of a type derived from a template.
 */
open class MyStackProject
internal constructor(obj: CppBindObject) : StackPrj(obj) {
    companion object {
        
        protected fun constructHelper(): Long {
            val id = jConstructor()
            return id
        }

        @JvmStatic
        private external fun jConstructor(): Long
        /**
         * An internal property to keep an information about the underlying C++ object type.
         * It is intended to be used by the generated code.
         */
        const val cppbindCxxTypeName: String = "cppbind::example::MyStack<cppbind::example::Project>"
    }
    
    
    constructor(): this(CppBindObject(constructHelper(), true)) {
    }
}

/**
 * An example of a type derived from a template.
 */
open class MyStackTask
internal constructor(obj: CppBindObject) : StackTask(obj) {
    companion object {
        
        protected fun constructHelper(): Long {
            val id = jConstructor()
            return id
        }

        @JvmStatic
        private external fun jConstructor(): Long
        /**
         * An internal property to keep an information about the underlying C++ object type.
         * It is intended to be used by the generated code.
         */
        const val cppbindCxxTypeName: String = "cppbind::example::MyStack<cppbind::example::Task>"
    }
    
    
    constructor(): this(CppBindObject(constructHelper(), true)) {
    }
}

private external fun jGettypebyid(id: Long): String
