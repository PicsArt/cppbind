/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 07/27/2021-11:00.
 * Please do not change it manually.
 */

#include "jni.h"
#include <iostream>
#include "kotlin/wrappers/iegen_wrapper_helper.hpp"
#include "cxx/inheritance/usage.hpp"
#include "cxx/inheritance/parallelogram.hpp"
#include "cxx/inheritance/vehicle.hpp"

using namespace iegen::example;


extern "C" JNIEXPORT void Java_com_examples_inheritance_GeometricFigure_jSet_1this(JNIEnv* env, jobject obj, jobjectid id, jobject self){
}
extern "C" JNIEXPORT void Java_com_examples_inheritance_GeometricFigure_jFinalize(JNIEnv* env, jobject obj, jobjectid id){
    iegen::example::GeometricFigure* this_object = reinterpret_cast<iegen::example::GeometricFigure*>(id);
    delete this_object;
}
extern "C" JNIEXPORT jobjectid Java_com_examples_inheritance_GeometricFigure_jConstructor(JNIEnv* env, jobject obj, jobjectid p){
    
    auto jni_to_cxx_p =  reinterpret_cast<iegen::example::Parallelogram*>(p);
    iegen::example::GeometricFigure* baseptr = new iegen::example::GeometricFigure(jni_to_cxx_p);
    return reinterpret_cast<jlong>(baseptr);
}

extern "C" JNIEXPORT jobjectid Java_com_examples_inheritance_GeometricFigure_jParallelogram(JNIEnv* env, jobject obj, jobjectid id, jobject err_obj){
    validateID(id);
    iegen::example::GeometricFigure* this_object = reinterpret_cast<iegen::example::GeometricFigure*>(id);
    int err_type_id = 0;
    void* err_ptr = nullptr;
    try {
        auto result = this_object->parallelogram();
        

        iegen::example::Parallelogram* cxx_to_jni_result_baseptr = result;
        jobjectid cxx_to_jni_result = reinterpret_cast<jlong>(cxx_to_jni_result_baseptr);
        return cxx_to_jni_result;
    }
    
    catch (const std::exception& e) {
        err_type_id = 1;
        err_ptr = new std::exception(e);
    }
    catch (...) {
        err_type_id = -1;
    }

    jclass err_cls = env->GetObjectClass(err_obj);
    jfieldID typeId_field_id = env->GetFieldID(err_cls, "typeId", "I");
    jfieldID ptrId_field_id = env->GetFieldID(err_cls, "ptrId", "J");
    env->SetIntField(err_obj, typeId_field_id, err_type_id);
    env->SetLongField(err_obj, ptrId_field_id, reinterpret_cast<jobjectid>(err_ptr));

    jobjectid result;
    return result;
}

extern "C" JNIEXPORT void Java_com_examples_inheritance_GeometricFigure_jSetparallelogram(JNIEnv* env, jobject obj, jobjectid id, jobjectid p, jobject err_obj){
    validateID(id);
    iegen::example::GeometricFigure* this_object = reinterpret_cast<iegen::example::GeometricFigure*>(id);
    auto jni_to_cxx_p =  reinterpret_cast<iegen::example::Parallelogram*>(p);
    int err_type_id = 0;
    void* err_ptr = nullptr;
    try {
        this_object->setParallelogram(jni_to_cxx_p);
    }
    
    catch (const std::exception& e) {
        err_type_id = 1;
        err_ptr = new std::exception(e);
    }
    catch (...) {
        err_type_id = -1;
    }

    jclass err_cls = env->GetObjectClass(err_obj);
    jfieldID typeId_field_id = env->GetFieldID(err_cls, "typeId", "I");
    jfieldID ptrId_field_id = env->GetFieldID(err_cls, "ptrId", "J");
    env->SetIntField(err_obj, typeId_field_id, err_type_id);
    env->SetLongField(err_obj, ptrId_field_id, reinterpret_cast<jobjectid>(err_ptr));
}


extern "C" JNIEXPORT void Java_com_examples_inheritance_MyVehicle_jSet_1this(JNIEnv* env, jobject obj, jobjectid id, jobject self){
}
extern "C" JNIEXPORT void Java_com_examples_inheritance_MyVehicle_jFinalize(JNIEnv* env, jobject obj, jobjectid id){
    auto this_object = *reinterpret_cast<std::shared_ptr<iegen::example::MyVehicle>*>(id);
    delete &this_object;
}
extern "C" JNIEXPORT jobjectid Java_com_examples_inheritance_MyVehicle_jConstructor(JNIEnv* env, jobject obj, jobjectid v){
    
    std::shared_ptr<iegen::example::Vehicle> jni_to_cxx_v;
    jni_to_cxx_v = *reinterpret_cast<std::shared_ptr<iegen::example::Vehicle>*>(v);
    iegen::example::MyVehicle* obj_ptr = new iegen::example::MyVehicle(jni_to_cxx_v);
    auto this_object = std::shared_ptr<iegen::example::MyVehicle>(obj_ptr);
    return reinterpret_cast<jlong>(new std::shared_ptr<iegen::example::MyVehicle>(this_object));
}

extern "C" JNIEXPORT jobjectid Java_com_examples_inheritance_MyVehicle_jVehicle(JNIEnv* env, jobject obj, jobjectid id, jobject err_obj){
    validateID(id);
    auto this_object = *reinterpret_cast<std::shared_ptr<iegen::example::MyVehicle>*>(id);
    int err_type_id = 0;
    void* err_ptr = nullptr;
    try {
        auto result = this_object->vehicle();
        
        jobjectid cxx_to_jni_result;
        cxx_to_jni_result = reinterpret_cast<jlong>(new std::shared_ptr<iegen::example::Vehicle>(result));
        return cxx_to_jni_result;
    }
    
    catch (const std::exception& e) {
        err_type_id = 1;
        err_ptr = new std::exception(e);
    }
    catch (...) {
        err_type_id = -1;
    }

    jclass err_cls = env->GetObjectClass(err_obj);
    jfieldID typeId_field_id = env->GetFieldID(err_cls, "typeId", "I");
    jfieldID ptrId_field_id = env->GetFieldID(err_cls, "ptrId", "J");
    env->SetIntField(err_obj, typeId_field_id, err_type_id);
    env->SetLongField(err_obj, ptrId_field_id, reinterpret_cast<jobjectid>(err_ptr));

    jobjectid result;
    return result;
}

extern "C" JNIEXPORT void Java_com_examples_inheritance_MyVehicle_jSetvehicle(JNIEnv* env, jobject obj, jobjectid id, jobjectid v, jobject err_obj){
    validateID(id);
    auto this_object = *reinterpret_cast<std::shared_ptr<iegen::example::MyVehicle>*>(id);
    std::shared_ptr<iegen::example::Vehicle> jni_to_cxx_v;
    jni_to_cxx_v = *reinterpret_cast<std::shared_ptr<iegen::example::Vehicle>*>(v);
    int err_type_id = 0;
    void* err_ptr = nullptr;
    try {
        this_object->setVehicle(jni_to_cxx_v);
    }
    
    catch (const std::exception& e) {
        err_type_id = 1;
        err_ptr = new std::exception(e);
    }
    catch (...) {
        err_type_id = -1;
    }

    jclass err_cls = env->GetObjectClass(err_obj);
    jfieldID typeId_field_id = env->GetFieldID(err_cls, "typeId", "I");
    jfieldID ptrId_field_id = env->GetFieldID(err_cls, "ptrId", "J");
    env->SetIntField(err_obj, typeId_field_id, err_type_id);
    env->SetLongField(err_obj, ptrId_field_id, reinterpret_cast<jobjectid>(err_ptr));
}
