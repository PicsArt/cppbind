/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 07/16/2021-08:01.
 * Please do not change it manually.
 */

#include "jni.h"
#include <iostream>
#include "kotlin/wrappers/iegen_wrapper_helper.hpp"
#include "cxx/misc/size_buffer.hpp"


using namespace iegen::example;
extern "C" JNIEXPORT void Java_com_examples_misc_SizeUsage_jSet_1this(JNIEnv* env, jobject obj, jobjectid id, jobject self){
}
extern "C" JNIEXPORT void Java_com_examples_misc_SizeUsage_jFinalize(JNIEnv* env, jobject obj, jobjectid id){
    iegen::example::SizeUsage* this_object = reinterpret_cast<iegen::example::SizeUsage*>(id);
    delete this_object;
}


extern "C" JNIEXPORT jdoubleArray Java_com_examples_misc_SizeUsage_jMultiplyby(JNIEnv* env, jobject obj, jdoubleArray size, jint n){
    
    jdouble *elems = env->GetDoubleArrayElements(size, 0);
    jdouble width_size = elems[0];
    jdouble height_size = elems[1];
    env->ReleaseDoubleArrayElements(size, elems, 0);
    SizeF jni_to_cxx_size = SizeF(width_size, height_size);



    
    auto result = iegen::example::SizeUsage::multiplyBy(jni_to_cxx_size, n);
    jdouble width_result = result.width;
    jdouble height_result = result.height;
    jdoubleArray cxx_to_jni_result = env->NewDoubleArray(2);
    jdouble carray[] = {width_result, height_result};
    env->SetDoubleArrayRegion(cxx_to_jni_result, 0 , 2, carray);
    return cxx_to_jni_result;
}

using namespace iegen::example;
extern "C" JNIEXPORT void Java_com_examples_misc_BufferUsage_jSet_1this(JNIEnv* env, jobject obj, jobjectid id, jobject self){
}
extern "C" JNIEXPORT void Java_com_examples_misc_BufferUsage_jFinalize(JNIEnv* env, jobject obj, jobjectid id){
    iegen::example::BufferUsage* this_object = reinterpret_cast<iegen::example::BufferUsage*>(id);
    delete this_object;
}
extern "C" JNIEXPORT jobjectid Java_com_examples_misc_BufferUsage_jConstructor(JNIEnv* env, jobject obj){
    iegen::example::BufferUsage* baseptr = new iegen::example::BufferUsage();
    return reinterpret_cast<jlong>(baseptr);
}


extern "C" JNIEXPORT jstring Java_com_examples_misc_BufferUsage_jUsage1(JNIEnv* env, jobject obj, jobjectid id, jobjectid b){
    
    auto jni_to_cxx_b = *reinterpret_cast<iegen::example::Buffer<int>*>(b);

    validateID(id);
    iegen::example::BufferUsage* this_object = reinterpret_cast<iegen::example::BufferUsage*>(id);
    
    auto result = this_object->usage1(jni_to_cxx_b);
    jstring cxx_to_jni_result = env->NewStringUTF(result.c_str());
    return cxx_to_jni_result;
}


extern "C" JNIEXPORT jobjectid Java_com_examples_misc_BufferUsage_jUsage2(JNIEnv* env, jobject obj, jobjectid id){
    
    validateID(id);
    iegen::example::BufferUsage* this_object = reinterpret_cast<iegen::example::BufferUsage*>(id);
    
    auto result = this_object->usage2();
    jobjectid cxx_to_jni_result = reinterpret_cast<jlong>(result);
    return cxx_to_jni_result;
}