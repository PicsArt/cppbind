/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 07/26/2021-12:44.
 * Please do not change it manually.
 */

#include "jni.h"
#include <iostream>
#include "kotlin/wrappers/iegen_wrapper_helper.hpp"
#include "cxx/nullables/nullable_utils.hpp"

using namespace iegen::example::nullable;


extern "C" JNIEXPORT void Java_com_examples_nullables_NumberInt_jSet_1this(JNIEnv* env, jobject obj, jobjectid id, jobject self){
}
extern "C" JNIEXPORT void Java_com_examples_nullables_NumberInt_jFinalize(JNIEnv* env, jobject obj, jobjectid id){
    auto this_object = *reinterpret_cast<std::shared_ptr<iegen::example::nullable::NumberInt>*>(id);
    delete &this_object;
}
extern "C" JNIEXPORT jobjectid Java_com_examples_nullables_NumberInt_jConstructor(JNIEnv* env, jobject obj, jint val_){
    
    iegen::example::nullable::NumberInt* obj_ptr = new iegen::example::nullable::NumberInt(val_);
    auto this_object = std::shared_ptr<iegen::example::nullable::NumberInt>(obj_ptr);
    return reinterpret_cast<jlong>(new std::shared_ptr<iegen::example::nullable::NumberInt>(this_object));
}

extern "C" JNIEXPORT jint Java_com_examples_nullables_NumberInt_jValue(JNIEnv* env, jobject obj, jobjectid id){
    validateID(id);
    auto this_object = *reinterpret_cast<std::shared_ptr<iegen::example::nullable::NumberInt>*>(id);
    auto result = this_object->value;
    
    return result;
}

extern "C" JNIEXPORT void Java_com_examples_nullables_NumberDouble_jSet_1this(JNIEnv* env, jobject obj, jobjectid id, jobject self){
}
extern "C" JNIEXPORT void Java_com_examples_nullables_NumberDouble_jFinalize(JNIEnv* env, jobject obj, jobjectid id){
    iegen::example::nullable::NumberDouble* this_object = reinterpret_cast<iegen::example::nullable::NumberDouble*>(id);
    delete this_object;
}
extern "C" JNIEXPORT jobjectid Java_com_examples_nullables_NumberDouble_jConstructor(JNIEnv* env, jobject obj, jdouble val_){
    
    iegen::example::nullable::NumberDouble* baseptr = new iegen::example::nullable::NumberDouble(val_);
    return reinterpret_cast<jlong>(baseptr);
}

extern "C" JNIEXPORT jdouble Java_com_examples_nullables_NumberDouble_jValue(JNIEnv* env, jobject obj, jobjectid id){
    validateID(id);
    iegen::example::nullable::NumberDouble* this_object = reinterpret_cast<iegen::example::nullable::NumberDouble*>(id);
    auto result = this_object->value;
    
    return result;
}

extern "C" JNIEXPORT void Java_com_examples_nullables_Utils_jSet_1this(JNIEnv* env, jobject obj, jobjectid id, jobject self){
}
extern "C" JNIEXPORT void Java_com_examples_nullables_Utils_jFinalize(JNIEnv* env, jobject obj, jobjectid id){
    auto this_object = *reinterpret_cast<std::shared_ptr<iegen::example::nullable::Utils>*>(id);
    delete &this_object;
}
extern "C" JNIEXPORT jobjectid Java_com_examples_nullables_Utils_jConstructor(JNIEnv* env, jobject obj, jobjectid num){
    
    auto jni_to_cxx_num =  reinterpret_cast<iegen::example::nullable::NumberDouble*>(num);
    iegen::example::nullable::Utils* obj_ptr = new iegen::example::nullable::Utils(jni_to_cxx_num);
    auto this_object = std::shared_ptr<iegen::example::nullable::Utils>(obj_ptr);
    return reinterpret_cast<jlong>(new std::shared_ptr<iegen::example::nullable::Utils>(this_object));
}


extern "C" JNIEXPORT jobjectid Java_com_examples_nullables_Utils_jMax(JNIEnv* env, jobject obj, jobjectid first, jobjectid second, jobject err_obj){
    

    auto jni_to_cxx_first =  reinterpret_cast<iegen::example::nullable::NumberDouble*>(first);


    auto jni_to_cxx_second =  reinterpret_cast<iegen::example::nullable::NumberDouble*>(second);

    int err_type_id = 0;
    void* err_ptr = nullptr;

    try {
      auto result = iegen::example::nullable::Utils::max(jni_to_cxx_first, jni_to_cxx_second);
      

    iegen::example::nullable::NumberDouble* cxx_to_jni_result_baseptr = result;
    jobjectid cxx_to_jni_result = reinterpret_cast<jlong>(cxx_to_jni_result_baseptr);
      return cxx_to_jni_result;
    }
    catch (const std::exception& e) {
          err_type_id = 1;
          err_ptr = new std::exception(e);
    }
    catch (...) {
        err_type_id = -1;
    }

    jclass err_cls = env->GetObjectClass(err_obj);
    jfieldID typeId_field_id = env->GetFieldID(err_cls, "typeId", "I");
    jfieldID ptrId_field_id = env->GetFieldID(err_cls, "ptrId", "J");
    env->SetIntField(err_obj, typeId_field_id, err_type_id);
    env->SetLongField(err_obj, ptrId_field_id, reinterpret_cast<jobjectid>(err_ptr));

    jobjectid result;
    return result;
}


extern "C" JNIEXPORT jobjectid Java_com_examples_nullables_Utils_jMax_11(JNIEnv* env, jobject obj, jobjectid first, jobjectid second, jobject err_obj){
    

    std::shared_ptr<iegen::example::nullable::NumberInt> jni_to_cxx_first;
    if (!first) {
        jni_to_cxx_first = std::shared_ptr<iegen::example::nullable::NumberInt>(nullptr);
    } else {
        jni_to_cxx_first = *reinterpret_cast<std::shared_ptr<iegen::example::nullable::NumberInt>*>(first);
    }


    std::shared_ptr<iegen::example::nullable::NumberInt> jni_to_cxx_second;
    if (!second) {
        jni_to_cxx_second = std::shared_ptr<iegen::example::nullable::NumberInt>(nullptr);
    } else {
        jni_to_cxx_second = *reinterpret_cast<std::shared_ptr<iegen::example::nullable::NumberInt>*>(second);
    }

    int err_type_id = 0;
    void* err_ptr = nullptr;

    try {
      auto result = iegen::example::nullable::Utils::max(jni_to_cxx_first, jni_to_cxx_second);
      
    jobjectid cxx_to_jni_result;
    if (!result) {
        cxx_to_jni_result = 0;
    } else {
        cxx_to_jni_result = reinterpret_cast<jlong>(new std::shared_ptr<iegen::example::nullable::NumberInt>(result));
    }
      return cxx_to_jni_result;
    }
    catch (const std::exception& e) {
          err_type_id = 1;
          err_ptr = new std::exception(e);
    }
    catch (...) {
        err_type_id = -1;
    }

    jclass err_cls = env->GetObjectClass(err_obj);
    jfieldID typeId_field_id = env->GetFieldID(err_cls, "typeId", "I");
    jfieldID ptrId_field_id = env->GetFieldID(err_cls, "ptrId", "J");
    env->SetIntField(err_obj, typeId_field_id, err_type_id);
    env->SetLongField(err_obj, ptrId_field_id, reinterpret_cast<jobjectid>(err_ptr));

    jobjectid result;
    return result;
}


extern "C" JNIEXPORT void Java_com_examples_nullables_Utils_jChecknonnullarg(JNIEnv* env, jobject obj, jobjectid number, jobject err_obj){
    

    auto jni_to_cxx_number =  reinterpret_cast<iegen::example::nullable::NumberDouble*>(number);

    int err_type_id = 0;
    void* err_ptr = nullptr;

    try {
      iegen::example::nullable::Utils::checkNonnullArg(jni_to_cxx_number);
      return;
    }
    catch (const std::exception& e) {
          err_type_id = 1;
          err_ptr = new std::exception(e);
    }
    catch (...) {
        err_type_id = -1;
    }

    jclass err_cls = env->GetObjectClass(err_obj);
    jfieldID typeId_field_id = env->GetFieldID(err_cls, "typeId", "I");
    jfieldID ptrId_field_id = env->GetFieldID(err_cls, "ptrId", "J");
    env->SetIntField(err_obj, typeId_field_id, err_type_id);
    env->SetLongField(err_obj, ptrId_field_id, reinterpret_cast<jobjectid>(err_ptr));


}


extern "C" JNIEXPORT jobjectid Java_com_examples_nullables_Utils_jChecknonnullreturn(JNIEnv* env, jobject obj, jobject err_obj){
    
    int err_type_id = 0;
    void* err_ptr = nullptr;

    try {
      auto result = iegen::example::nullable::Utils::checkNonnullReturn();
      

    iegen::example::nullable::NumberDouble* cxx_to_jni_result_baseptr = result;
    jobjectid cxx_to_jni_result = reinterpret_cast<jlong>(cxx_to_jni_result_baseptr);
      return cxx_to_jni_result;
    }
    catch (const std::exception& e) {
          err_type_id = 1;
          err_ptr = new std::exception(e);
    }
    catch (...) {
        err_type_id = -1;
    }

    jclass err_cls = env->GetObjectClass(err_obj);
    jfieldID typeId_field_id = env->GetFieldID(err_cls, "typeId", "I");
    jfieldID ptrId_field_id = env->GetFieldID(err_cls, "ptrId", "J");
    env->SetIntField(err_obj, typeId_field_id, err_type_id);
    env->SetLongField(err_obj, ptrId_field_id, reinterpret_cast<jobjectid>(err_ptr));

    jobjectid result;
    return result;
}

extern "C" JNIEXPORT jobjectid Java_com_examples_nullables_Utils_jNullable(JNIEnv* env, jobject obj, jobjectid id, jobject err_obj){
    validateID(id);
    auto this_object = *reinterpret_cast<std::shared_ptr<iegen::example::nullable::Utils>*>(id);
    int err_type_id = 0;
    void* err_ptr = nullptr;
    try {
        auto result = this_object->nullable();
        

        iegen::example::nullable::NumberDouble* cxx_to_jni_result_baseptr = result;
        jobjectid cxx_to_jni_result = reinterpret_cast<jlong>(cxx_to_jni_result_baseptr);
        return cxx_to_jni_result;
    }
    
    catch (const std::exception& e) {
        err_type_id = 1;
        err_ptr = new std::exception(e);
    }
    catch (...) {
        err_type_id = -1;
    }

    jclass err_cls = env->GetObjectClass(err_obj);
    jfieldID typeId_field_id = env->GetFieldID(err_cls, "typeId", "I");
    jfieldID ptrId_field_id = env->GetFieldID(err_cls, "ptrId", "J");
    env->SetIntField(err_obj, typeId_field_id, err_type_id);
    env->SetLongField(err_obj, ptrId_field_id, reinterpret_cast<jobjectid>(err_ptr));

    jobjectid result;
    return result;
}

extern "C" JNIEXPORT void Java_com_examples_nullables_Utils_jSetnullable(JNIEnv* env, jobject obj, jobjectid id, jobjectid num, jobject err_obj){
    validateID(id);
    auto this_object = *reinterpret_cast<std::shared_ptr<iegen::example::nullable::Utils>*>(id);
    auto jni_to_cxx_num =  reinterpret_cast<iegen::example::nullable::NumberDouble*>(num);
    int err_type_id = 0;
    void* err_ptr = nullptr;
    try {
        this_object->setNullable(jni_to_cxx_num);
    }
    
    catch (const std::exception& e) {
        err_type_id = 1;
        err_ptr = new std::exception(e);
    }
    catch (...) {
        err_type_id = -1;
    }

    jclass err_cls = env->GetObjectClass(err_obj);
    jfieldID typeId_field_id = env->GetFieldID(err_cls, "typeId", "I");
    jfieldID ptrId_field_id = env->GetFieldID(err_cls, "ptrId", "J");
    env->SetIntField(err_obj, typeId_field_id, err_type_id);
    env->SetLongField(err_obj, ptrId_field_id, reinterpret_cast<jobjectid>(err_ptr));
}


extern "C" JNIEXPORT jobjectid Java_com_examples_nullables_Utils_jNonnull(JNIEnv* env, jobject obj, jobjectid id, jobject err_obj){
    validateID(id);
    auto this_object = *reinterpret_cast<std::shared_ptr<iegen::example::nullable::Utils>*>(id);
    int err_type_id = 0;
    void* err_ptr = nullptr;
    try {
        auto result = this_object->nonNull();
        

        iegen::example::nullable::NumberDouble* cxx_to_jni_result_baseptr = result;
        jobjectid cxx_to_jni_result = reinterpret_cast<jlong>(cxx_to_jni_result_baseptr);
        return cxx_to_jni_result;
    }
    
    catch (const std::exception& e) {
        err_type_id = 1;
        err_ptr = new std::exception(e);
    }
    catch (...) {
        err_type_id = -1;
    }

    jclass err_cls = env->GetObjectClass(err_obj);
    jfieldID typeId_field_id = env->GetFieldID(err_cls, "typeId", "I");
    jfieldID ptrId_field_id = env->GetFieldID(err_cls, "ptrId", "J");
    env->SetIntField(err_obj, typeId_field_id, err_type_id);
    env->SetLongField(err_obj, ptrId_field_id, reinterpret_cast<jobjectid>(err_ptr));

    jobjectid result;
    return result;
}

extern "C" JNIEXPORT void Java_com_examples_nullables_Utils_jSetnonnull(JNIEnv* env, jobject obj, jobjectid id, jobjectid num, jobject err_obj){
    validateID(id);
    auto this_object = *reinterpret_cast<std::shared_ptr<iegen::example::nullable::Utils>*>(id);
    auto jni_to_cxx_num =  reinterpret_cast<iegen::example::nullable::NumberDouble*>(num);
    int err_type_id = 0;
    void* err_ptr = nullptr;
    try {
        this_object->setNonNull(jni_to_cxx_num);
    }
    
    catch (const std::exception& e) {
        err_type_id = 1;
        err_ptr = new std::exception(e);
    }
    catch (...) {
        err_type_id = -1;
    }

    jclass err_cls = env->GetObjectClass(err_obj);
    jfieldID typeId_field_id = env->GetFieldID(err_cls, "typeId", "I");
    jfieldID ptrId_field_id = env->GetFieldID(err_cls, "ptrId", "J");
    env->SetIntField(err_obj, typeId_field_id, err_type_id);
    env->SetLongField(err_obj, ptrId_field_id, reinterpret_cast<jobjectid>(err_ptr));
}


extern "C" JNIEXPORT jobjectid Java_com_examples_nullables_Utils_jNumdouble(JNIEnv* env, jobject obj, jobjectid id){
    validateID(id);
    auto this_object = *reinterpret_cast<std::shared_ptr<iegen::example::nullable::Utils>*>(id);
    auto result = this_object->numDouble;
    

    iegen::example::nullable::NumberDouble* cxx_to_jni_result_baseptr = result;
    jobjectid cxx_to_jni_result = reinterpret_cast<jlong>(cxx_to_jni_result_baseptr);
    return cxx_to_jni_result;
}

extern "C" JNIEXPORT void Java_com_examples_nullables_Utils_jSetnumdouble(JNIEnv* env, jobject obj, jobjectid id, jobjectid value){
    validateID(id);
    auto this_object = *reinterpret_cast<std::shared_ptr<iegen::example::nullable::Utils>*>(id);
    
    
    auto jni_to_cxx_value =  reinterpret_cast<iegen::example::nullable::NumberDouble*>(value);
    this_object->numDouble = jni_to_cxx_value;
}


extern "C" JNIEXPORT jobjectid Java_com_examples_nullables_Utils_jNumint(JNIEnv* env, jobject obj, jobjectid id){
    validateID(id);
    auto this_object = *reinterpret_cast<std::shared_ptr<iegen::example::nullable::Utils>*>(id);
    auto result = this_object->numInt;
    
    jobjectid cxx_to_jni_result;
    cxx_to_jni_result = reinterpret_cast<jlong>(new std::shared_ptr<iegen::example::nullable::NumberInt>(result));
    return cxx_to_jni_result;
}

extern "C" JNIEXPORT void Java_com_examples_nullables_Utils_jSetnumint(JNIEnv* env, jobject obj, jobjectid id, jobjectid value){
    validateID(id);
    auto this_object = *reinterpret_cast<std::shared_ptr<iegen::example::nullable::Utils>*>(id);
    
    
    std::shared_ptr<iegen::example::nullable::NumberInt> jni_to_cxx_value;
    jni_to_cxx_value = *reinterpret_cast<std::shared_ptr<iegen::example::nullable::NumberInt>*>(value);
    this_object->numInt = jni_to_cxx_value;
}
