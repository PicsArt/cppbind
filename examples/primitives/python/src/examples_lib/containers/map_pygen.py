"""
  ______ .______   .______   .______    __  .__   __.  _______  
 /      ||   _  \  |   _  \  |   _  \  |  | |  \ |  | |       \ 
|  ,----'|  |_)  | |  |_)  | |  |_)  | |  | |   \|  | |  .--.  |
|  |     |   ___/  |   ___/  |   _  <  |  | |  . `  | |  |  |  |
|  `----.|  |      |  |      |  |_)  | |  | |  |\   | |  '--'  |
 \______|| _|      | _|      |______/  |__| |__| \__| |_______/ 

This file is generated by cppbind on 09/28/2022-14:06.
Please do not change it manually.
"""
from __future__ import annotations

from typing import *

import examples.containers.map as pybind_map_pygen
from examples_lib.cppbind.cppbind_metaclass_pygen import *
from examples_lib.cppbind.cppbind_utils_pygen import *


class MapItem(metaclass=CppBindMetaclass):
    """
    comments

    """
    
    @bind
    def __init__(self, _value: int):
        """
        comments

        """
        pass
    
    @property
    @bind
    def value(self) -> int:
        """
        comments

        """
        pass

    @value.setter
    @bind
    def value(self, value: int):
        """
        comments

        """
        pass

    @bind
    def __repr__(self) -> str:
        """
        CppBind generated __repr__ method returning underlying C++ object type and id.
        """
        pass


class MapExamples(metaclass=CppBindMetaclass):
    """
    comments

    """
    
    @bind
    def __init__(self):
        """
        comments

        """
        pass
    
    @bind
    def add_string_pair(self, info: Tuple[str, str]) -> None:
        """
        comments

        """
        pass

    @bind
    def add_int_map(self, info: Dict[int, int]) -> None:
        """
        comments

        """
        pass

    @bind
    def add_string_map(self, info: Dict[str, str]) -> None:
        """
        comments

        """
        pass

    @bind
    def get_string_map(self) -> Dict[str, str]:
        """
        comments

        """
        pass

    @bind
    def get_int_map(self) -> Dict[int, int]:
        """
        comments

        """
        pass

    @bind
    def add_mixed_map(self, info: Dict[str, MapItem]) -> None:
        """
        comments

        """
        pass

    @bind
    def get_mixed_map(self) -> Dict[str, MapItem]:
        """
        comments

        """
        pass

    @bind
    def check_comparator_argument(self, arg1: Dict[int, int]) -> None:
        """
        Method for checking that the template arguments that are not translated
        into target languages are not required to have converters.

        """
        pass

    @bind
    def __repr__(self) -> str:
        """
        CppBind generated __repr__ method returning underlying C++ object type and id.
        """
        pass
