"""
  ______ .______   .______   .______    __  .__   __.  _______  
 /      ||   _  \  |   _  \  |   _  \  |  | |  \ |  | |       \ 
|  ,----'|  |_)  | |  |_)  | |  |_)  | |  | |   \|  | |  .--.  |
|  |     |   ___/  |   ___/  |   _  <  |  | |  . `  | |  |  |  |
|  `----.|  |      |  |      |  |_)  | |  | |  |\   | |  '--'  |
 \______|| _|      | _|      |______/  |__| |__| \__| |_______/ 

This file is generated by cppbind on 11/24/2022-07:17.
Please do not change it manually.
"""
from __future__ import annotations

from typing import *

import examples.inheritance.datetime as pybind_datetime_pygen
import examples_lib.inheritance.base_pygen as base_pygen
import examples_lib.inheritance.date_pygen as date_pygen
from examples_lib.cppbind.cppbind_metaclass_pygen import *
from examples_lib.cppbind.cppbind_utils_pygen import *


class Time(base_pygen.Base, metaclass=CppBindMetaclass):
    """
    datetime.hpp is parsed before time.hpp and it contains DateTime class which is inherited from Time(declared in time.hpp).
    We generate bindings for these two classes in the same datetime file to validate their order.
    """
    
    @bind
    def __init__(self, h: int, m: int, s: int):
        
        pass
    
    @property
    @bind
    def time(self) -> str:
        
        pass
    
    @bind
    def value(self) -> str:
        
        pass


class DateTime(Time, date_pygen.Date, metaclass=CppBindMetaclass):
    """
    datetime.hpp is parsed before time.hpp and it contains DateTime class which is inherited from Time(declared in time.hpp).
    We generate bindings for these two classes in the same datetime file to validate their order.
    """
    
    @bind
    def __init__(self, d: int, mo: int, y: int, h: int, mi: int, s: int):
        
        pass
    
    @property
    @bind
    def datetime(self) -> str:
        
        pass
    
    @bind
    def value(self) -> str:
        
        pass
