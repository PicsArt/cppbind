"""
  ______ .______   .______   .______    __  .__   __.  _______  
 /      ||   _  \  |   _  \  |   _  \  |  | |  \ |  | |       \ 
|  ,----'|  |_)  | |  |_)  | |  |_)  | |  | |   \|  | |  .--.  |
|  |     |   ___/  |   ___/  |   _  <  |  | |  . `  | |  |  |  |
|  `----.|  |      |  |      |  |_)  | |  | |  |\   | |  '--'  |
 \______|| _|      | _|      |______/  |__| |__| \__| |_______/ 

This file is generated by cppbind on 08/11/2022-07:34.
Please do not change it manually.
"""
from __future__ import annotations

from typing import *

import examples.inheritance.doctor as pybind_doctor_pygen
from examples_lib.cppbind.cppbind_metaclass_pygen import *
from examples_lib.cppbind.cppbind_utils_pygen import *


class Doctor(metaclass=CppBindMetaclass):
    """
    A base class for checking single branch non-polymorphic inheritance cases
    """
    
    @bind
    def __init__(self, doctor_name: str):
        
        pass

    @bind
    def __repr__(self) -> str:
        """
        CppBind generated __repr__ method returning underlying C++ object type and id.
        """
        pass


class Surgeon(Doctor, metaclass=CppBindMetaclass):
    
    @bind
    def __init__(self, surgeon_name: str):
        
        pass


class GoodVirtualDoctor(metaclass=CppBindMetaclass):
    """
    A base class for checking multibranch mixed polymorphic inheritance cases
    """
    pass

    @bind
    def __repr__(self) -> str:
        """
        CppBind generated __repr__ method returning underlying C++ object type and id.
        """
        pass


class GoodDoctor(metaclass=CppBindMetaclass):
    
    @bind
    def __init__(self, doctor_name: str):
        
        pass

    @bind
    def __repr__(self) -> str:
        """
        CppBind generated __repr__ method returning underlying C++ object type and id.
        """
        pass


class GoodYoungDoctor(GoodVirtualDoctor, GoodDoctor, metaclass=CppBindMetaclass):
    """
    Polymorphic subclass
    """
    
    @bind
    def __init__(self, doctor_name: str):
        
        pass


class GoodOldDoctor(GoodDoctor, metaclass=CppBindMetaclass):
    """
    Non-polymorphic subclass
    """
    
    @bind
    def __init__(self, doctor_name: str):
        
        pass


class DoctorInfo(metaclass=CppBindMetaclass):
    
    @bind
    def __init__(self, s: Surgeon):
        
        pass

    @bind
    def __init__(self, d: GoodYoungDoctor):
        
        pass
    
    @bind
    def get_doctor_name(self, d: Doctor) -> str:
        
        pass

    @bind
    def get_surgeon_name(self, s: Surgeon) -> str:
        
        pass

    @bind
    def get_doctor(self) -> Doctor:
        
        pass

    @bind
    def get_good_doctor(self) -> GoodDoctor:
        
        pass

    @bind
    def get_good_virtual_doctor(self) -> GoodVirtualDoctor:
        
        pass

    @bind
    def get_good_doctor_name(self, d: GoodDoctor) -> str:
        
        pass

    @bind
    def __repr__(self) -> str:
        """
        CppBind generated __repr__ method returning underlying C++ object type and id.
        """
        pass
