"""
  ______ .______   .______   .______    __  .__   __.  _______  
 /      ||   _  \  |   _  \  |   _  \  |  | |  \ |  | |       \ 
|  ,----'|  |_)  | |  |_)  | |  |_)  | |  | |   \|  | |  .--.  |
|  |     |   ___/  |   ___/  |   _  <  |  | |  . `  | |  |  |  |
|  `----.|  |      |  |      |  |_)  | |  | |  |\   | |  '--'  |
 \______|| _|      | _|      |______/  |__| |__| \__| |_______/ 

This file is generated by cppbind on 11/24/2022-07:17.
Please do not change it manually.
"""
from __future__ import annotations

from abc import abstractmethod
from typing import *

import examples.inheritance.shapes as pybind_shapes_pygen
from examples_lib.cppbind.cppbind_metaclass_pygen import *
from examples_lib.cppbind.cppbind_utils_pygen import *


class Shape(metaclass=CppBindMetaclass):
    """
    An example marked with shared_ref=True and directly inherited from std::enable_shared_from_this
    Contains a method which returns a reference on this.
    """
    @abstractmethod
    def __init__(self, *args, **kwargs):
        pass
    
    @bind
    def area(self) -> float:
        
        pass

    @bind
    def this_object(self) -> Shape:
        
        pass

    @bind
    def __repr__(self) -> str:
        """
        CppBind generated __repr__ method returning underlying C++ object type and id.
        """
        pass


class Circle(Shape, metaclass=CppBindMetaclass):
    """
    An example marked with shared_ref=True and indirectly inherited from std::enable_shared_from_this.
    Contains a method returning a pointer on this.
    """
    
    @classmethod
    @bind
    def create(cls, r: float) -> Circle:
        
        pass

    @bind
    def area(self) -> float:
        
        pass

    @bind
    def increment_radius(self, value: float = 1.0) -> Circle:
        
        pass


class RegularTriangle(metaclass=CppBindMetaclass):
    """
    An example marked with shared_ref=True, indirectly inherited from std::enable_shared_from_this from a base having no API.
    Contains a method returning reference on this.
    """
    
    @bind
    def __init__(self, side: float):
        
        pass
    
    @bind
    def area(self) -> float:
        
        pass

    @bind
    def increment_side(self, value: float = 1.0) -> RegularTriangle:
        
        pass

    @bind
    def multiply_side(self, value: float = 1.0) -> RegularTriangle:
        
        pass

    @bind
    def __repr__(self) -> str:
        """
        CppBind generated __repr__ method returning underlying C++ object type and id.
        """
        pass
