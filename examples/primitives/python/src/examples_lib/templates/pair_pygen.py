"""
  ______ .______   .______   .______    __  .__   __.  _______  
 /      ||   _  \  |   _  \  |   _  \  |  | |  \ |  | |       \ 
|  ,----'|  |_)  | |  |_)  | |  |_)  | |  | |   \|  | |  .--.  |
|  |     |   ___/  |   ___/  |   _  <  |  | |  . `  | |  |  |  |
|  `----.|  |      |  |      |  |_)  | |  | |  |\   | |  '--'  |
 \______|| _|      | _|      |______/  |__| |__| \__| |_______/ 

This file is generated by cppbind on 11/24/2022-07:17.
Please do not change it manually.
"""
from __future__ import annotations

from typing import *

import examples.templates.pair as pybind_pair_pygen
from examples_lib.cppbind.cppbind_metaclass_pygen import *
from examples_lib.cppbind.cppbind_utils_pygen import *

if TYPE_CHECKING:
    import examples_lib.forward_decl.student_pygen as forward_decl_student_pygen
    import examples_lib.overloads.employee_pygen as overloads_employee_pygen


class PairEmployee(metaclass=CppBindMetaclass):
    
    @bind
    def __init__(self, first: str, second: overloads_employee_pygen.Employee):
        
        pass
    
    @property
    @bind
    def first(self) -> str:
        
        pass

    @property
    @bind
    def second(self) -> overloads_employee_pygen.Employee:
        
        pass

    @bind
    def __repr__(self) -> str:
        """
        CppBind generated __repr__ method returning underlying C++ object type and id.
        """
        pass


class PairStudent(metaclass=CppBindMetaclass):
    
    @bind
    def __init__(self, first: str, second: forward_decl_student_pygen.Student):
        
        pass
    
    @property
    @bind
    def first(self) -> str:
        
        pass

    @property
    @bind
    def second(self) -> forward_decl_student_pygen.Student:
        
        pass

    @bind
    def __repr__(self) -> str:
        """
        CppBind generated __repr__ method returning underlying C++ object type and id.
        """
        pass
