"""
  ______ .______   .______   .______    __  .__   __.  _______  
 /      ||   _  \  |   _  \  |   _  \  |  | |  \ |  | |       \ 
|  ,----'|  |_)  | |  |_)  | |  |_)  | |  | |   \|  | |  .--.  |
|  |     |   ___/  |   ___/  |   _  <  |  | |  . `  | |  |  |  |
|  `----.|  |      |  |      |  |_)  | |  | |  |\   | |  '--'  |
 \______|| _|      | _|      |______/  |__| |__| \__| |_______/ 

This file is generated by cppbind on 10/25/2022-06:11.
Please do not change it manually.
"""
from __future__ import annotations

from typing import *

import examples.templates.stack.stack_root as pybind_stack_root_pygen
import examples_lib.simple.root_pygen as simple_root_pygen
import examples_lib.templates.container_pygen as container_pygen
from examples_lib.cppbind.cppbind_metaclass_pygen import *
from examples_lib.cppbind.cppbind_utils_pygen import *


class RootsStack(container_pygen.Container, metaclass=CppBindMetaclass):
    """
    An example of a fully specialized template type having an API.
    """
    
    @bind
    def __init__(self):
        
        pass
    
    @bind
    def push(self, item: simple_root_pygen.Root) -> None:
        
        pass

    @bind
    def pop(self) -> None:
        
        pass

    @bind
    def top(self) -> simple_root_pygen.Root:
        
        pass


class MyStackRoot(RootsStack, metaclass=CppBindMetaclass):
    """
    An example of a type derived from a fully specialized template.
    """
    
    @bind
    def __init__(self):
        
        pass
    
    @bind
    def first_item_of_typedef(self, p: RootsStack) -> simple_root_pygen.Root:
        """
        Method having typedef of a full specialization as an argument.
        """
        pass
