"""
  ______ .______   .______   .______    __  .__   __.  _______  
 /      ||   _  \  |   _  \  |   _  \  |  | |  \ |  | |       \ 
|  ,----'|  |_)  | |  |_)  | |  |_)  | |  | |   \|  | |  .--.  |
|  |     |   ___/  |   ___/  |   _  <  |  | |  . `  | |  |  |  |
|  `----.|  |      |  |      |  |_)  | |  | |  |\   | |  '--'  |
 \______|| _|      | _|      |______/  |__| |__| \__| |_______/ 

This file is generated by cppbind on 10/26/2022-08:46.
Please do not change it manually.
"""
from __future__ import annotations

from typing import *

import examples.templates.tuple as pybind_tuple_pygen
from examples_lib.cppbind.cppbind_metaclass_pygen import *
from examples_lib.cppbind.cppbind_utils_pygen import *


class TupleEmpty(metaclass=CppBindMetaclass):
    pass

    @bind
    def __repr__(self) -> str:
        """
        CppBind generated __repr__ method returning underlying C++ object type and id.
        """
        pass


class TupleThreeInt(metaclass=CppBindMetaclass):
    
    @bind
    def __init__(self, t: int, ts1: int, ts2: int):
        
        pass
    
    @property
    @bind
    def tail(self) -> int:
        
        pass


    @property
    @bind
    def rest(self) -> TupleTwoInt:
        
        pass


    @bind
    def __repr__(self) -> str:
        """
        CppBind generated __repr__ method returning underlying C++ object type and id.
        """
        pass


class TupleTwoInt(metaclass=CppBindMetaclass):
    
    @bind
    def __init__(self, t: int, ts1: int):
        
        pass
    
    @property
    @bind
    def tail(self) -> int:
        
        pass


    @property
    @bind
    def rest(self) -> TupleInt:
        
        pass


    @bind
    def __repr__(self) -> str:
        """
        CppBind generated __repr__ method returning underlying C++ object type and id.
        """
        pass


class TupleInt(metaclass=CppBindMetaclass):
    
    @bind
    def __init__(self, t: int):
        
        pass
    
    @property
    @bind
    def tail(self) -> int:
        
        pass


    @property
    @bind
    def rest(self) -> TupleEmpty:
        
        pass


    @bind
    def __repr__(self) -> str:
        """
        CppBind generated __repr__ method returning underlying C++ object type and id.
        """
        pass


class TupleDouble(metaclass=CppBindMetaclass):
    
    @bind
    def __init__(self, t: float):
        
        pass
    
    @property
    @bind
    def tail(self) -> float:
        
        pass


    @property
    @bind
    def rest(self) -> TupleEmpty:
        
        pass


    @bind
    def __repr__(self) -> str:
        """
        CppBind generated __repr__ method returning underlying C++ object type and id.
        """
        pass


class TupleDoubles(metaclass=CppBindMetaclass):
    
    @bind
    def __init__(self, t: float, ts1: float):
        
        pass
    
    @property
    @bind
    def tail(self) -> float:
        
        pass


    @property
    @bind
    def rest(self) -> TupleDouble:
        
        pass


    @bind
    def __repr__(self) -> str:
        """
        CppBind generated __repr__ method returning underlying C++ object type and id.
        """
        pass


class TupleDoubleInt(metaclass=CppBindMetaclass):
    
    @bind
    def __init__(self, t: int, ts1: float):
        
        pass
    
    @property
    @bind
    def tail(self) -> int:
        
        pass


    @property
    @bind
    def rest(self) -> TupleDouble:
        
        pass


    @bind
    def __repr__(self) -> str:
        """
        CppBind generated __repr__ method returning underlying C++ object type and id.
        """
        pass


@bind
def create_tuple_int_int(args1: int, args2: int) -> TupleTwoInt:
    """
    An example with variadic template.
    """
    pass


@bind
def create_tuple_int_double(args1: int, args2: float) -> TupleDoubleInt:
    """
    An example with variadic template.
    """
    pass
