/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 04/12/2022-09:34.
 * Please do not change it manually.
 */

#include <pybind11/pybind11.h>
#include <pybind11/stl.h>
#include <pybind11/functional.h>

#include "cxx/containers/pair.hpp"
#include "cxx/containers/map.hpp"

namespace py = pybind11;

void bindExamplesLibContainersPair(py::module& m) {
    {
        using namespace iegen::example;
        py::class_<iegen::example::PairExamples> pairExamples(m, "PairExamples");
        
        pairExamples.def(py::init<>());
        pairExamples.def("sum_int_pairs", &iegen::example::PairExamples::sumIntPairs, py::arg("p1"), py::arg("p2"), py::return_value_policy::automatic);
        pairExamples.def("set_nested_pair", &iegen::example::PairExamples::setNestedPair, py::arg("p"));
        pairExamples.def("get_nested_pair", &iegen::example::PairExamples::getNestedPair, py::return_value_policy::automatic);
        pairExamples.def("get_string_pair", &iegen::example::PairExamples::getStringPair, py::return_value_policy::automatic);
        pairExamples.def("set_nested_vector_of_pairs", &iegen::example::PairExamples::setNestedVectorOfPairs, py::arg("v"));
        pairExamples.def("get_nested_vector_of_pairs", &iegen::example::PairExamples::getNestedVectorOfPairs, py::return_value_policy::automatic);

        pairExamples.def_property("complex_pair_obj", py::cpp_function(&iegen::example::PairExamples::complexPairObj, py::return_value_policy::reference_internal), &iegen::example::PairExamples::setComplexPairObj);
    }
} /* bindExamplesLibContainersPair */
