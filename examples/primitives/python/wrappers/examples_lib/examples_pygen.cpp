/**
 *   ______ .______   .______   .______    __  .__   __.  _______  
 *  /      ||   _  \  |   _  \  |   _  \  |  | |  \ |  | |       \ 
 * |  ,----'|  |_)  | |  |_)  | |  |_)  | |  | |   \|  | |  .--.  |
 * |  |     |   ___/  |   ___/  |   _  <  |  | |  . `  | |  |  |  |
 * |  `----.|  |      |  |      |  |_)  | |  | |  |\   | |  '--'  |
 *  \______|| _|      | _|      |______/  |__| |__| \__| |_______/ 
 * 
 * This file is generated by cppbind on 11/22/2022-10:17.
 * Please do not change it manually.
 */

#include <pybind11/pybind11.h>
#include "python/wrappers/examples_lib/examples_pygen.h"

namespace py = pybind11;

void bindExamples(py::module& m) {
    py::module_ examples_lib_misc_std_utils_pygen = m.def_submodule("misc", "misc");

    py::module_ examples_lib_misc_std_utils_pygen_std_utils = examples_lib_misc_std_utils_pygen.def_submodule("std_utils", "std_utils");

    bindExamplesLibMiscStdUtilsPygen(examples_lib_misc_std_utils_pygen_std_utils);
    py::module_ examples_lib_basic_types_short_pygen = m.def_submodule("basic_types", "basic_types");

    py::module_ examples_lib_basic_types_short_pygen_short = examples_lib_basic_types_short_pygen.def_submodule("short", "short");

    bindExamplesLibBasicTypesShortPygen(examples_lib_basic_types_short_pygen_short);
    py::module_ examples_lib_containers_map_pygen = m.def_submodule("containers", "containers");

    py::module_ examples_lib_containers_map_pygen_map = examples_lib_containers_map_pygen.def_submodule("map", "map");

    bindExamplesLibContainersMapPygen(examples_lib_containers_map_pygen_map);
    py::module_ examples_lib_containers_nested_containers_pygen = m.def_submodule("containers", "containers");

    py::module_ examples_lib_containers_nested_containers_pygen_nested_containers = examples_lib_containers_nested_containers_pygen.def_submodule("nested_containers", "nested_containers");

    bindExamplesLibContainersNestedContainersPygen(examples_lib_containers_nested_containers_pygen_nested_containers);
    py::module_ examples_lib_containers_pair_pygen = m.def_submodule("containers", "containers");

    py::module_ examples_lib_containers_pair_pygen_pair = examples_lib_containers_pair_pygen.def_submodule("pair", "pair");

    bindExamplesLibContainersPairPygen(examples_lib_containers_pair_pygen_pair);
    py::module_ examples_lib_containers_vector_pygen = m.def_submodule("containers", "containers");

    py::module_ examples_lib_containers_vector_pygen_vector = examples_lib_containers_vector_pygen.def_submodule("vector", "vector");

    bindExamplesLibContainersVectorPygen(examples_lib_containers_vector_pygen_vector);
    py::module_ examples_lib_enums_color_pygen = m.def_submodule("enums", "enums");

    py::module_ examples_lib_enums_color_pygen_color = examples_lib_enums_color_pygen.def_submodule("color", "color");

    bindExamplesLibEnumsColorPygen(examples_lib_enums_color_pygen_color);
    py::module_ examples_lib_enums_frame_pygen = m.def_submodule("enums", "enums");

    py::module_ examples_lib_enums_frame_pygen_frame = examples_lib_enums_frame_pygen.def_submodule("frame", "frame");

    bindExamplesLibEnumsFramePygen(examples_lib_enums_frame_pygen_frame);
    py::module_ examples_lib_enums_logging_pygen = m.def_submodule("enums", "enums");

    py::module_ examples_lib_enums_logging_pygen_logging = examples_lib_enums_logging_pygen.def_submodule("logging", "logging");

    bindExamplesLibEnumsLoggingPygen(examples_lib_enums_logging_pygen_logging);
    py::module_ examples_lib_extra_object_pygen = m.def_submodule("extra", "extra");

    py::module_ examples_lib_extra_object_pygen_object = examples_lib_extra_object_pygen.def_submodule("object", "object");

    bindExamplesLibExtraObjectPygen(examples_lib_extra_object_pygen_object);
    py::module_ examples_lib_extra_object_usage_pygen = m.def_submodule("extra", "extra");

    py::module_ examples_lib_extra_object_usage_pygen_object_usage = examples_lib_extra_object_usage_pygen.def_submodule("object_usage", "object_usage");

    bindExamplesLibExtraObjectUsagePygen(examples_lib_extra_object_usage_pygen_object_usage);
    py::module_ examples_lib_forward_decl_teacher_pygen = m.def_submodule("forward_decl", "forward_decl");

    py::module_ examples_lib_forward_decl_teacher_pygen_teacher = examples_lib_forward_decl_teacher_pygen.def_submodule("teacher", "teacher");

    bindExamplesLibForwardDeclTeacherPygen(examples_lib_forward_decl_teacher_pygen_teacher);
    py::module_ examples_lib_factories_school_pygen = m.def_submodule("factories", "factories");

    py::module_ examples_lib_factories_school_pygen_school = examples_lib_factories_school_pygen.def_submodule("school", "school");

    bindExamplesLibFactoriesSchoolPygen(examples_lib_factories_school_pygen_school);
    py::module_ examples_lib_forward_decl_student_pygen = m.def_submodule("forward_decl", "forward_decl");

    py::module_ examples_lib_forward_decl_student_pygen_student = examples_lib_forward_decl_student_pygen.def_submodule("student", "student");

    bindExamplesLibForwardDeclStudentPygen(examples_lib_forward_decl_student_pygen_student);
    py::module_ examples_lib_functionals_functional_example_pygen = m.def_submodule("functionals", "functionals");

    py::module_ examples_lib_functionals_functional_example_pygen_functional_example = examples_lib_functionals_functional_example_pygen.def_submodule("functional_example", "functional_example");

    bindExamplesLibFunctionalsFunctionalExamplePygen(examples_lib_functionals_functional_example_pygen_functional_example);
    py::module_ examples_lib_getters_fruits_pygen = m.def_submodule("getters", "getters");

    py::module_ examples_lib_getters_fruits_pygen_fruits = examples_lib_getters_fruits_pygen.def_submodule("fruits", "fruits");

    bindExamplesLibGettersFruitsPygen(examples_lib_getters_fruits_pygen_fruits);
    py::module_ examples_lib_getters_number_pygen = m.def_submodule("getters", "getters");

    py::module_ examples_lib_getters_number_pygen_number = examples_lib_getters_number_pygen.def_submodule("number", "number");

    bindExamplesLibGettersNumberPygen(examples_lib_getters_number_pygen_number);
    py::module_ examples_lib_getters_person_pygen = m.def_submodule("getters", "getters");

    py::module_ examples_lib_getters_person_pygen_person = examples_lib_getters_person_pygen.def_submodule("person", "person");

    bindExamplesLibGettersPersonPygen(examples_lib_getters_person_pygen_person);
    py::module_ examples_lib_globs_max_pygen = m.def_submodule("globs", "globs");

    py::module_ examples_lib_globs_max_pygen_max = examples_lib_globs_max_pygen.def_submodule("max", "max");

    bindExamplesLibGlobsMaxPygen(examples_lib_globs_max_pygen_max);
    py::module_ examples_lib_globs_min_pygen = m.def_submodule("globs", "globs");

    py::module_ examples_lib_globs_min_pygen_min = examples_lib_globs_min_pygen.def_submodule("min", "min");

    bindExamplesLibGlobsMinPygen(examples_lib_globs_min_pygen_min);
    py::module_ examples_lib_simple_task_task_pygen = m.def_submodule("simple.task", "simple.task");

    py::module_ examples_lib_simple_task_task_pygen_task = examples_lib_simple_task_task_pygen.def_submodule("task", "task");

    bindExamplesLibSimpleTaskTaskPygen(examples_lib_simple_task_task_pygen_task);
    py::module_ examples_lib_simple_project_pygen = m.def_submodule("simple", "simple");

    py::module_ examples_lib_simple_project_pygen_project = examples_lib_simple_project_pygen.def_submodule("project", "project");

    bindExamplesLibSimpleProjectPygen(examples_lib_simple_project_pygen_project);
    py::module_ examples_lib_simple_root_pygen = m.def_submodule("simple", "simple");

    py::module_ examples_lib_simple_root_pygen_root = examples_lib_simple_root_pygen.def_submodule("root", "root");

    bindExamplesLibSimpleRootPygen(examples_lib_simple_root_pygen_root);
    py::module_ examples_lib_globs_utils_pygen = m.def_submodule("globs", "globs");

    py::module_ examples_lib_globs_utils_pygen_utils = examples_lib_globs_utils_pygen.def_submodule("utils", "utils");

    bindExamplesLibGlobsUtilsPygen(examples_lib_globs_utils_pygen_utils);
    py::module_ examples_lib_globs_primitiveDefaults_pygen = m.def_submodule("globs", "globs");

    py::module_ examples_lib_globs_primitiveDefaults_pygen_primitiveDefaults = examples_lib_globs_primitiveDefaults_pygen.def_submodule("primitiveDefaults", "primitiveDefaults");

    bindExamplesLibGlobsPrimitivedefaultsPygen(examples_lib_globs_primitiveDefaults_pygen_primitiveDefaults);
    py::module_ examples_lib_globs_complexDefaults_pygen = m.def_submodule("globs", "globs");

    py::module_ examples_lib_globs_complexDefaults_pygen_complexDefaults = examples_lib_globs_complexDefaults_pygen.def_submodule("complexDefaults", "complexDefaults");

    bindExamplesLibGlobsComplexdefaultsPygen(examples_lib_globs_complexDefaults_pygen_complexDefaults);
    py::module_ examples_lib_globs_customArgUtils_pygen = m.def_submodule("globs", "globs");

    py::module_ examples_lib_globs_customArgUtils_pygen_customArgUtils = examples_lib_globs_customArgUtils_pygen.def_submodule("customArgUtils", "customArgUtils");

    bindExamplesLibGlobsCustomargutilsPygen(examples_lib_globs_customArgUtils_pygen_customArgUtils);
    py::module_ examples_lib_globs_templateOverloadedUtils_pygen = m.def_submodule("globs", "globs");

    py::module_ examples_lib_globs_templateOverloadedUtils_pygen_templateOverloadedUtils = examples_lib_globs_templateOverloadedUtils_pygen.def_submodule("templateOverloadedUtils", "templateOverloadedUtils");

    bindExamplesLibGlobsTemplateoverloadedutilsPygen(examples_lib_globs_templateOverloadedUtils_pygen_templateOverloadedUtils);
    py::module_ examples_lib_hashing_objects_pygen = m.def_submodule("hashing", "hashing");

    py::module_ examples_lib_hashing_objects_pygen_objects = examples_lib_hashing_objects_pygen.def_submodule("objects", "objects");

    bindExamplesLibHashingObjectsPygen(examples_lib_hashing_objects_pygen_objects);
    py::module_ examples_lib_inheritance_animal_pygen = m.def_submodule("inheritance", "inheritance");

    py::module_ examples_lib_inheritance_animal_pygen_animal = examples_lib_inheritance_animal_pygen.def_submodule("animal", "animal");

    bindExamplesLibInheritanceAnimalPygen(examples_lib_inheritance_animal_pygen_animal);
    py::module_ examples_lib_inheritance_mammals_animal_pygen = m.def_submodule("inheritance.mammals", "inheritance.mammals");

    py::module_ examples_lib_inheritance_mammals_animal_pygen_animal = examples_lib_inheritance_mammals_animal_pygen.def_submodule("animal", "animal");

    bindExamplesLibInheritanceMammalsAnimalPygen(examples_lib_inheritance_mammals_animal_pygen_animal);
    py::module_ examples_lib_inheritance_base_pygen = m.def_submodule("inheritance", "inheritance");

    py::module_ examples_lib_inheritance_base_pygen_base = examples_lib_inheritance_base_pygen.def_submodule("base", "base");

    bindExamplesLibInheritanceBasePygen(examples_lib_inheritance_base_pygen_base);
    py::module_ examples_lib_inheritance_vehicle_pygen = m.def_submodule("inheritance", "inheritance");

    py::module_ examples_lib_inheritance_vehicle_pygen_vehicle = examples_lib_inheritance_vehicle_pygen.def_submodule("vehicle", "vehicle");

    bindExamplesLibInheritanceVehiclePygen(examples_lib_inheritance_vehicle_pygen_vehicle);
    py::module_ examples_lib_inheritance_bicycle_pygen = m.def_submodule("inheritance", "inheritance");

    py::module_ examples_lib_inheritance_bicycle_pygen_bicycle = examples_lib_inheritance_bicycle_pygen.def_submodule("bicycle", "bicycle");

    bindExamplesLibInheritanceBicyclePygen(examples_lib_inheritance_bicycle_pygen_bicycle);
    py::module_ examples_lib_inheritance_car_pygen = m.def_submodule("inheritance", "inheritance");

    py::module_ examples_lib_inheritance_car_pygen_car = examples_lib_inheritance_car_pygen.def_submodule("car", "car");

    bindExamplesLibInheritanceCarPygen(examples_lib_inheritance_car_pygen_car);
    py::module_ examples_lib_inheritance_date_pygen = m.def_submodule("inheritance", "inheritance");

    py::module_ examples_lib_inheritance_date_pygen_date = examples_lib_inheritance_date_pygen.def_submodule("date", "date");

    bindExamplesLibInheritanceDatePygen(examples_lib_inheritance_date_pygen_date);
    py::module_ examples_lib_inheritance_datetime_pygen = m.def_submodule("inheritance", "inheritance");

    py::module_ examples_lib_inheritance_datetime_pygen_datetime = examples_lib_inheritance_datetime_pygen.def_submodule("datetime", "datetime");

    bindExamplesLibInheritanceDatetimePygen(examples_lib_inheritance_datetime_pygen_datetime);
    py::module_ examples_lib_inheritance_doctor_pygen = m.def_submodule("inheritance", "inheritance");

    py::module_ examples_lib_inheritance_doctor_pygen_doctor = examples_lib_inheritance_doctor_pygen.def_submodule("doctor", "doctor");

    bindExamplesLibInheritanceDoctorPygen(examples_lib_inheritance_doctor_pygen_doctor);
    py::module_ examples_lib_inheritance_parallelogram_pygen = m.def_submodule("inheritance", "inheritance");

    py::module_ examples_lib_inheritance_parallelogram_pygen_parallelogram = examples_lib_inheritance_parallelogram_pygen.def_submodule("parallelogram", "parallelogram");

    bindExamplesLibInheritanceParallelogramPygen(examples_lib_inheritance_parallelogram_pygen_parallelogram);
    py::module_ examples_lib_inheritance_rectangle_pygen = m.def_submodule("inheritance", "inheritance");

    py::module_ examples_lib_inheritance_rectangle_pygen_rectangle = examples_lib_inheritance_rectangle_pygen.def_submodule("rectangle", "rectangle");

    bindExamplesLibInheritanceRectanglePygen(examples_lib_inheritance_rectangle_pygen_rectangle);
    py::module_ examples_lib_inheritance_rhombus_pygen = m.def_submodule("inheritance", "inheritance");

    py::module_ examples_lib_inheritance_rhombus_pygen_rhombus = examples_lib_inheritance_rhombus_pygen.def_submodule("rhombus", "rhombus");

    bindExamplesLibInheritanceRhombusPygen(examples_lib_inheritance_rhombus_pygen_rhombus);
    py::module_ examples_lib_inheritance_shapes_pygen = m.def_submodule("inheritance", "inheritance");

    py::module_ examples_lib_inheritance_shapes_pygen_shapes = examples_lib_inheritance_shapes_pygen.def_submodule("shapes", "shapes");

    bindExamplesLibInheritanceShapesPygen(examples_lib_inheritance_shapes_pygen_shapes);
    py::module_ examples_lib_inheritance_square_pygen = m.def_submodule("inheritance", "inheritance");

    py::module_ examples_lib_inheritance_square_pygen_square = examples_lib_inheritance_square_pygen.def_submodule("square", "square");

    bindExamplesLibInheritanceSquarePygen(examples_lib_inheritance_square_pygen_square);
    py::module_ examples_lib_inheritance_symbol_pygen = m.def_submodule("inheritance", "inheritance");

    py::module_ examples_lib_inheritance_symbol_pygen_symbol = examples_lib_inheritance_symbol_pygen.def_submodule("symbol", "symbol");

    bindExamplesLibInheritanceSymbolPygen(examples_lib_inheritance_symbol_pygen_symbol);
    py::module_ examples_lib_inheritance_usage_pygen = m.def_submodule("inheritance", "inheritance");

    py::module_ examples_lib_inheritance_usage_pygen_usage = examples_lib_inheritance_usage_pygen.def_submodule("usage", "usage");

    bindExamplesLibInheritanceUsagePygen(examples_lib_inheritance_usage_pygen_usage);
    py::module_ examples_lib_macros_macro_usage_pygen = m.def_submodule("macros", "macros");

    py::module_ examples_lib_macros_macro_usage_pygen_macro_usage = examples_lib_macros_macro_usage_pygen.def_submodule("macro_usage", "macro_usage");

    bindExamplesLibMacrosMacroUsagePygen(examples_lib_macros_macro_usage_pygen_macro_usage);
    py::module_ examples_lib_misc_size_buffer_pygen = m.def_submodule("misc", "misc");

    py::module_ examples_lib_misc_size_buffer_pygen_size_buffer = examples_lib_misc_size_buffer_pygen.def_submodule("size_buffer", "size_buffer");

    bindExamplesLibMiscSizeBufferPygen(examples_lib_misc_size_buffer_pygen_size_buffer);
    py::module_ examples_lib_misc_yaml_example_pygen = m.def_submodule("misc", "misc");

    py::module_ examples_lib_misc_yaml_example_pygen_yaml_example = examples_lib_misc_yaml_example_pygen.def_submodule("yaml_example", "yaml_example");

    bindExamplesLibMiscYamlExamplePygen(examples_lib_misc_yaml_example_pygen_yaml_example);
    py::module_ examples_lib_nested_types_list_pygen = m.def_submodule("nested_types", "nested_types");

    py::module_ examples_lib_nested_types_list_pygen_list = examples_lib_nested_types_list_pygen.def_submodule("list", "list");

    bindExamplesLibNestedTypesListPygen(examples_lib_nested_types_list_pygen_list);
    py::module_ examples_lib_nested_types_usage_list_usage_pygen = m.def_submodule("nested_types.usage", "nested_types.usage");

    py::module_ examples_lib_nested_types_usage_list_usage_pygen_list_usage = examples_lib_nested_types_usage_list_usage_pygen.def_submodule("list_usage", "list_usage");

    bindExamplesLibNestedTypesUsageListUsagePygen(examples_lib_nested_types_usage_list_usage_pygen_list_usage);
    py::module_ examples_lib_nullables_nullable_utils_pygen = m.def_submodule("nullables", "nullables");

    py::module_ examples_lib_nullables_nullable_utils_pygen_nullable_utils = examples_lib_nullables_nullable_utils_pygen.def_submodule("nullable_utils", "nullable_utils");

    bindExamplesLibNullablesNullableUtilsPygen(examples_lib_nullables_nullable_utils_pygen_nullable_utils);
    py::module_ examples_lib_operators_counter_pygen = m.def_submodule("operators", "operators");

    py::module_ examples_lib_operators_counter_pygen_counter = examples_lib_operators_counter_pygen.def_submodule("counter", "counter");

    bindExamplesLibOperatorsCounterPygen(examples_lib_operators_counter_pygen_counter);
    py::module_ examples_lib_operators_intarray_pygen = m.def_submodule("operators", "operators");

    py::module_ examples_lib_operators_intarray_pygen_intarray = examples_lib_operators_intarray_pygen.def_submodule("intarray", "intarray");

    bindExamplesLibOperatorsIntarrayPygen(examples_lib_operators_intarray_pygen_intarray);
    py::module_ examples_lib_optionals_optionals_pygen = m.def_submodule("optionals", "optionals");

    py::module_ examples_lib_optionals_optionals_pygen_optionals = examples_lib_optionals_optionals_pygen.def_submodule("optionals", "optionals");

    bindExamplesLibOptionalsOptionalsPygen(examples_lib_optionals_optionals_pygen_optionals);
    py::module_ examples_lib_overloads_employee_pygen = m.def_submodule("overloads", "overloads");

    py::module_ examples_lib_overloads_employee_pygen_employee = examples_lib_overloads_employee_pygen.def_submodule("employee", "employee");

    bindExamplesLibOverloadsEmployeePygen(examples_lib_overloads_employee_pygen_employee);
    py::module_ examples_lib_overloads_utils_pygen = m.def_submodule("overloads", "overloads");

    py::module_ examples_lib_overloads_utils_pygen_utils = examples_lib_overloads_utils_pygen.def_submodule("utils", "utils");

    bindExamplesLibOverloadsUtilsPygen(examples_lib_overloads_utils_pygen_utils);
    py::module_ examples_lib_rv_policies_keep_alive_policy_pygen = m.def_submodule("rv_policies", "rv_policies");

    py::module_ examples_lib_rv_policies_keep_alive_policy_pygen_keep_alive_policy = examples_lib_rv_policies_keep_alive_policy_pygen.def_submodule("keep_alive_policy", "keep_alive_policy");

    bindExamplesLibRvPoliciesKeepAlivePolicyPygen(examples_lib_rv_policies_keep_alive_policy_pygen_keep_alive_policy);
    py::module_ examples_lib_rv_policies_return_value_policies_pygen = m.def_submodule("rv_policies", "rv_policies");

    py::module_ examples_lib_rv_policies_return_value_policies_pygen_return_value_policies = examples_lib_rv_policies_return_value_policies_pygen.def_submodule("return_value_policies", "return_value_policies");

    bindExamplesLibRvPoliciesReturnValuePoliciesPygen(examples_lib_rv_policies_return_value_policies_pygen_return_value_policies);
    py::module_ examples_lib_shared_ptr_shared_ptr_pygen = m.def_submodule("shared_ptr", "shared_ptr");

    py::module_ examples_lib_shared_ptr_shared_ptr_pygen_shared_ptr = examples_lib_shared_ptr_shared_ptr_pygen.def_submodule("shared_ptr", "shared_ptr");

    bindExamplesLibSharedPtrSharedPtrPygen(examples_lib_shared_ptr_shared_ptr_pygen_shared_ptr);
    py::module_ examples_lib_shared_ptr_shared_ptr_symbol_pygen = m.def_submodule("shared_ptr", "shared_ptr");

    py::module_ examples_lib_shared_ptr_shared_ptr_symbol_pygen_shared_ptr_symbol = examples_lib_shared_ptr_shared_ptr_symbol_pygen.def_submodule("shared_ptr_symbol", "shared_ptr_symbol");

    bindExamplesLibSharedPtrSharedPtrSymbolPygen(examples_lib_shared_ptr_shared_ptr_symbol_pygen_shared_ptr_symbol);
    py::module_ examples_lib_simple_holder_pygen = m.def_submodule("simple", "simple");

    py::module_ examples_lib_simple_holder_pygen_holder = examples_lib_simple_holder_pygen.def_submodule("holder", "holder");

    bindExamplesLibSimpleHolderPygen(examples_lib_simple_holder_pygen_holder);
    py::module_ examples_lib_simple_path_pygen = m.def_submodule("simple", "simple");

    py::module_ examples_lib_simple_path_pygen_path = examples_lib_simple_path_pygen.def_submodule("path", "path");

    bindExamplesLibSimplePathPygen(examples_lib_simple_path_pygen_path);
    py::module_ examples_lib_stl_types_std_optional_pygen = m.def_submodule("stl_types", "stl_types");

    py::module_ examples_lib_stl_types_std_optional_pygen_std_optional = examples_lib_stl_types_std_optional_pygen.def_submodule("std_optional", "std_optional");

    bindExamplesLibStlTypesStdOptionalPygen(examples_lib_stl_types_std_optional_pygen_std_optional);
    py::module_ examples_lib_templates_addressable_pygen = m.def_submodule("templates", "templates");

    py::module_ examples_lib_templates_addressable_pygen_addressable = examples_lib_templates_addressable_pygen.def_submodule("addressable", "addressable");

    bindExamplesLibTemplatesAddressablePygen(examples_lib_templates_addressable_pygen_addressable);
    py::module_ examples_lib_templates_array_pygen = m.def_submodule("templates", "templates");

    py::module_ examples_lib_templates_array_pygen_array = examples_lib_templates_array_pygen.def_submodule("array", "array");

    bindExamplesLibTemplatesArrayPygen(examples_lib_templates_array_pygen_array);
    py::module_ examples_lib_templates_component_pygen = m.def_submodule("templates", "templates");

    py::module_ examples_lib_templates_component_pygen_component = examples_lib_templates_component_pygen.def_submodule("component", "component");

    bindExamplesLibTemplatesComponentPygen(examples_lib_templates_component_pygen_component);
    py::module_ examples_lib_templates_container_pygen = m.def_submodule("templates", "templates");

    py::module_ examples_lib_templates_container_pygen_container = examples_lib_templates_container_pygen.def_submodule("container", "container");

    bindExamplesLibTemplatesContainerPygen(examples_lib_templates_container_pygen_container);
    py::module_ examples_lib_templates_elements_pygen = m.def_submodule("templates", "templates");

    py::module_ examples_lib_templates_elements_pygen_elements = examples_lib_templates_elements_pygen.def_submodule("elements", "elements");

    bindExamplesLibTemplatesElementsPygen(examples_lib_templates_elements_pygen_elements);
    py::module_ examples_lib_templates_pair_pygen = m.def_submodule("templates", "templates");

    py::module_ examples_lib_templates_pair_pygen_pair = examples_lib_templates_pair_pygen.def_submodule("pair", "pair");

    bindExamplesLibTemplatesPairPygen(examples_lib_templates_pair_pygen_pair);
    py::module_ examples_lib_templates_stack_pygen = m.def_submodule("templates", "templates");

    py::module_ examples_lib_templates_stack_pygen_stack = examples_lib_templates_stack_pygen.def_submodule("stack", "stack");

    bindExamplesLibTemplatesStackPygen(examples_lib_templates_stack_pygen_stack);
    py::module_ examples_lib_templates_stack_usage_pygen = m.def_submodule("templates", "templates");

    py::module_ examples_lib_templates_stack_usage_pygen_stack_usage = examples_lib_templates_stack_usage_pygen.def_submodule("stack_usage", "stack_usage");

    bindExamplesLibTemplatesStackUsagePygen(examples_lib_templates_stack_usage_pygen_stack_usage);
    py::module_ examples_lib_templates_my_stack_pygen = m.def_submodule("templates", "templates");

    py::module_ examples_lib_templates_my_stack_pygen_my_stack = examples_lib_templates_my_stack_pygen.def_submodule("my_stack", "my_stack");

    bindExamplesLibTemplatesMyStackPygen(examples_lib_templates_my_stack_pygen_my_stack);
    py::module_ examples_lib_templates_stack_stack_root_pygen = m.def_submodule("templates.stack", "templates.stack");

    py::module_ examples_lib_templates_stack_stack_root_pygen_stack_root = examples_lib_templates_stack_stack_root_pygen.def_submodule("stack_root", "stack_root");

    bindExamplesLibTemplatesStackStackRootPygen(examples_lib_templates_stack_stack_root_pygen_stack_root);
    py::module_ examples_lib_templates_template_methods_pygen = m.def_submodule("templates", "templates");

    py::module_ examples_lib_templates_template_methods_pygen_template_methods = examples_lib_templates_template_methods_pygen.def_submodule("template_methods", "template_methods");

    bindExamplesLibTemplatesTemplateMethodsPygen(examples_lib_templates_template_methods_pygen_template_methods);
    py::module_ examples_lib_templates_tuple_pygen = m.def_submodule("templates", "templates");

    py::module_ examples_lib_templates_tuple_pygen_tuple = examples_lib_templates_tuple_pygen.def_submodule("tuple", "tuple");

    bindExamplesLibTemplatesTuplePygen(examples_lib_templates_tuple_pygen_tuple);
    py::module_ examples_lib_templates_tuple_usage_pygen = m.def_submodule("templates", "templates");

    py::module_ examples_lib_templates_tuple_usage_pygen_tuple_usage = examples_lib_templates_tuple_usage_pygen.def_submodule("tuple_usage", "tuple_usage");

    bindExamplesLibTemplatesTupleUsagePygen(examples_lib_templates_tuple_usage_pygen_tuple_usage);
    py::module_ examples_lib_templates_value_pygen = m.def_submodule("templates", "templates");

    py::module_ examples_lib_templates_value_pygen_value = examples_lib_templates_value_pygen.def_submodule("value", "value");

    bindExamplesLibTemplatesValuePygen(examples_lib_templates_value_pygen_value);
    py::module_ examples_lib_templates_vector_pygen = m.def_submodule("templates", "templates");

    py::module_ examples_lib_templates_vector_pygen_vector = examples_lib_templates_vector_pygen.def_submodule("vector", "vector");

    bindExamplesLibTemplatesVectorPygen(examples_lib_templates_vector_pygen_vector);
    py::module_ examples_lib_templates_wrapper_pygen = m.def_submodule("templates", "templates");

    py::module_ examples_lib_templates_wrapper_pygen_wrapper = examples_lib_templates_wrapper_pygen.def_submodule("wrapper", "wrapper");

    bindExamplesLibTemplatesWrapperPygen(examples_lib_templates_wrapper_pygen_wrapper);
    py::module_ examples_lib_typedefs_queue_int_pygen = m.def_submodule("typedefs", "typedefs");

    py::module_ examples_lib_typedefs_queue_int_pygen_queue_int = examples_lib_typedefs_queue_int_pygen.def_submodule("queue_int", "queue_int");

    bindExamplesLibTypedefsQueueIntPygen(examples_lib_typedefs_queue_int_pygen_queue_int);
    py::module_ examples_lib_typedefs_queue_int_shared_pygen = m.def_submodule("typedefs", "typedefs");

    py::module_ examples_lib_typedefs_queue_int_shared_pygen_queue_int_shared = examples_lib_typedefs_queue_int_shared_pygen.def_submodule("queue_int_shared", "queue_int_shared");

    bindExamplesLibTypedefsQueueIntSharedPygen(examples_lib_typedefs_queue_int_shared_pygen_queue_int_shared);
}
