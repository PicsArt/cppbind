/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 04/12/2022-06:07.
 * Please do not change it manually.
 */

#include <pybind11/pybind11.h>
#include <pybind11/stl.h>
#include <pybind11/functional.h>

#include "cxx/extra/object.hpp"

namespace py = pybind11;

void bindExamplesLibExtraObjectPygen(py::module& m) {
    {
        using namespace iegen;
        py::class_<iegen::Object, std::shared_ptr<iegen::Object>> object(m, "Object");
        object.def("__repr__", &iegen::Object::toDebugString, py::return_value_policy::automatic);
        object.def("__str__", &iegen::Object::toString, py::return_value_policy::automatic);
        object.def("class_name", &iegen::Object::className, py::return_value_policy::automatic);
        object.def("__eq__", py::overload_cast<std::shared_ptr<Object>>(&iegen::Object::equals, py::const_), py::arg("other"), py::return_value_policy::automatic);
        object.def("__hash__", &iegen::Object::hash, py::return_value_policy::automatic);
        object.def("debug_info", &iegen::Object::debugInfo, py::return_value_policy::automatic);
        object.def("bytes_count", &iegen::Object::bytesCount, py::return_value_policy::automatic);
    }
} /* bindExamplesLibExtraObjectPygen */
