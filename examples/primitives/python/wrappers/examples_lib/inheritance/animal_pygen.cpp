/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 02/11/2022-07:24.
 * Please do not change it manually.
 */

#include <pybind11/pybind11.h>
#include <pybind11/stl.h>
#include <pybind11/functional.h>

#include "cxx/inheritance/animal.hpp"

namespace py = pybind11;

void bindExamplesLibInheritanceAnimal(py::module& m) {
    {
        using namespace iegen::example;
        py::class_<iegen::example::Animal> animal(m, "Animal");
        
        animal.def(py::init<>());
        animal.def("type_name", &iegen::example::Animal::typeName, py::return_value_policy::automatic);
        animal.def("equals", &iegen::example::Animal::equals, py::arg("a"), py::return_value_policy::automatic);
    }
    {
        using namespace iegen::example;
        py::class_<iegen::example::TerrestrialAnimal, iegen::example::Animal> terrestrialAnimal(m, "TerrestrialAnimal");
        
        terrestrialAnimal.def(py::init<>());
        terrestrialAnimal.def("type_name", &iegen::example::TerrestrialAnimal::typeName, py::return_value_policy::automatic);
    }
    {
        using namespace iegen::example;
        py::class_<iegen::example::AquaticAnimal, iegen::example::Animal> aquaticAnimal(m, "AquaticAnimal");
        
        aquaticAnimal.def(py::init<>());
        aquaticAnimal.def("type_name", &iegen::example::AquaticAnimal::typeName, py::return_value_policy::automatic);
    }
    {
        using namespace iegen::example;
        py::class_<iegen::example::Frog, iegen::example::TerrestrialAnimal, iegen::example::AquaticAnimal> frog(m, "Frog");
        
        frog.def(py::init<>());
        frog.def("type_name", &iegen::example::Frog::typeName, py::return_value_policy::automatic);
    }
    {
        using namespace iegen::example;
        py::class_<iegen::example::LittleFrog, iegen::example::Frog> littleFrog(m, "LittleFrog");
        
        littleFrog.def(py::init<>());
    }
    {
        using namespace iegen::example;
        py::class_<iegen::example::AnimalUsage> animalUsage(m, "AnimalUsage");
        
        animalUsage.def(py::init<>());

        animalUsage.def(py::init<iegen::example::LittleFrog>(), py::arg("little_frog"));
        animalUsage.def_static("get_animal_type_name", &iegen::example::AnimalUsage::getAnimalTypeName, py::arg("animal"), py::return_value_policy::automatic);
        animalUsage.def_static("get_aquatic_animal_type_name", &iegen::example::AnimalUsage::getAquaticAnimalTypeName, py::arg("animal"), py::return_value_policy::automatic);
        animalUsage.def("get_animal", &iegen::example::AnimalUsage::getAnimal, py::return_value_policy::reference_internal);
        animalUsage.def("get_aquatic_animal", &iegen::example::AnimalUsage::getAquaticAnimal, py::return_value_policy::reference_internal);
        animalUsage.def("get_frog", &iegen::example::AnimalUsage::getFrog, py::return_value_policy::reference_internal);
        animalUsage.def("get_little_frog", &iegen::example::AnimalUsage::getLittleFrog, py::return_value_policy::reference);
    }
} /* bindExamplesLibInheritanceAnimal */
