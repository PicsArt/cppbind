/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 04/12/2022-06:07.
 * Please do not change it manually.
 */

#include <pybind11/pybind11.h>
#include <pybind11/stl.h>
#include <pybind11/functional.h>

#include "cxx/inheritance/usage.hpp"
#include "cxx/inheritance/parallelogram.hpp"
#include "cxx/inheritance/vehicle.hpp"
#include "cxx/inheritance/bicycle.hpp"
#include "cxx/inheritance/date.hpp"

namespace py = pybind11;

void bindExamplesLibInheritanceUsagePygen(py::module& m) {
    {
        using namespace iegen::example;
        py::class_<iegen::example::GeometricFigure> geometricFigure(m, "GeometricFigure");
        
        geometricFigure.def(py::init<iegen::example::Parallelogram *>(), py::arg("p"));

        geometricFigure.def_property("parallelogram", py::cpp_function(&iegen::example::GeometricFigure::parallelogram, py::return_value_policy::reference_internal), &iegen::example::GeometricFigure::setParallelogram);

        geometricFigure.def_property("nullable_parallelogram", py::cpp_function(&iegen::example::GeometricFigure::nullableParallelogram, py::return_value_policy::reference_internal), &iegen::example::GeometricFigure::setNullableParallelogram);
    }
    {
        using namespace iegen::example;
        py::class_<iegen::example::MyVehicle, std::shared_ptr<iegen::example::MyVehicle>> myVehicle(m, "MyVehicle");
        
        myVehicle.def(py::init<std::shared_ptr<Vehicle>, std::shared_ptr<const Vehicle>>(), py::arg("v"), py::arg("cv"));

        myVehicle.def_property("vehicle", py::cpp_function(&iegen::example::MyVehicle::vehicle, py::return_value_policy::reference_internal), &iegen::example::MyVehicle::setVehicle);

        myVehicle.def_property("const_vehicle", py::cpp_function(&iegen::example::MyVehicle::constVehicle, py::return_value_policy::reference_internal), &iegen::example::MyVehicle::setConstVehicle);
    }
    {
        using namespace iegen::example;
        py::class_<iegen::example::MyBicycle, std::shared_ptr<iegen::example::MyBicycle>> myBicycle(m, "MyBicycle");
        
        myBicycle.def(py::init<std::shared_ptr<Bicycle>>(), py::arg("b"));

        myBicycle.def_property("bicycle", py::cpp_function(&iegen::example::MyBicycle::bicycle, py::return_value_policy::reference_internal), &iegen::example::MyBicycle::setBicycle);
    }
    {
        using namespace iegen::example;
        py::class_<iegen::example::MyCalendar, std::shared_ptr<iegen::example::MyCalendar>> myCalendar(m, "MyCalendar");
        
        myCalendar.def(py::init<const std::vector<std::shared_ptr<Date>> &>(), py::arg("events"));
        myCalendar.def("add_event", &iegen::example::MyCalendar::addEvent, py::arg("e"));

        myCalendar.def_property_readonly("events", &iegen::example::MyCalendar::events, py::return_value_policy::reference_internal);
    }
} /* bindExamplesLibInheritanceUsagePygen */
