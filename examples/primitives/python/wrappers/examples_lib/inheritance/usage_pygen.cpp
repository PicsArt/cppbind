/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 12/21/2021-09:31.
 * Please do not change it manually.
 */

#include <pybind11/pybind11.h>
#include <pybind11/stl.h>
#include <pybind11/functional.h>

#include "cxx/inheritance/usage.hpp"
#include "cxx/inheritance/parallelogram.hpp"
#include "cxx/inheritance/vehicle.hpp"
#include "cxx/inheritance/bicycle.hpp"
#include "cxx/inheritance/date.hpp"

namespace py = pybind11;

void bindIegenExampleGeometricFigure(py::module& m) {
    using namespace iegen::example;
    py::class_<iegen::example::GeometricFigure> geometricFigure(m, "GeometricFigure");

    geometricFigure.def(py::init<iegen::example::Parallelogram *>(), py::arg("p"));


    geometricFigure.def_property("parallelogram", &iegen::example::GeometricFigure::parallelogram, &iegen::example::GeometricFigure::setParallelogram);


    geometricFigure.def_property("nullable_parallelogram", &iegen::example::GeometricFigure::nullableParallelogram, &iegen::example::GeometricFigure::setNullableParallelogram);
}
void bindIegenExampleMyVehicle(py::module& m) {
    using namespace iegen::example;
    py::class_<iegen::example::MyVehicle, std::shared_ptr<iegen::example::MyVehicle>> myVehicle(m, "MyVehicle");

    myVehicle.def(py::init<const std::shared_ptr<Vehicle> &>(), py::arg("v"));


    myVehicle.def_property("vehicle", &iegen::example::MyVehicle::vehicle, &iegen::example::MyVehicle::setVehicle);
}
void bindIegenExampleMyBicycle(py::module& m) {
    using namespace iegen::example;
    py::class_<iegen::example::MyBicycle, std::shared_ptr<iegen::example::MyBicycle>> myBicycle(m, "MyBicycle");

    myBicycle.def(py::init<const std::shared_ptr<Bicycle> &>(), py::arg("b"));


    myBicycle.def_property("bicycle", &iegen::example::MyBicycle::bicycle, &iegen::example::MyBicycle::setBicycle);
}
void bindIegenExampleMyCalendar(py::module& m) {
    using namespace iegen::example;
    py::class_<iegen::example::MyCalendar, std::shared_ptr<iegen::example::MyCalendar>> myCalendar(m, "MyCalendar");

    myCalendar.def(py::init<const std::vector<std::shared_ptr<Date>> &>(), py::arg("events"));
    myCalendar.def("add_event", &iegen::example::MyCalendar::addEvent, py::arg("e"));


    myCalendar.def_property_readonly("events", &iegen::example::MyCalendar::events);
}
