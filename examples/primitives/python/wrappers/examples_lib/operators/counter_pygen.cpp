/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 04/12/2022-06:07.
 * Please do not change it manually.
 */

#include <pybind11/pybind11.h>
#include <pybind11/stl.h>
#include <pybind11/functional.h>

#include "cxx/operators/counter.hpp"

namespace py = pybind11;

void bindExamplesLibOperatorsCounterPygen(py::module& m) {
    {
        using namespace iegen::example;
        py::class_<iegen::example::Counter> counter(m, "Counter");
        
        counter.def(py::init<int>(), py::arg("count"));

        counter.def_property_readonly("count", &iegen::example::Counter::count, py::return_value_policy::reference_internal);
        counter.def("__add__", &iegen::example::Counter::operator+, py::arg("counter"), py::return_value_policy::automatic);
        counter.def("__gt__", &iegen::example::Counter::operator>, py::arg("counter"), py::return_value_policy::automatic);
        counter.def("__iadd__", &iegen::example::Counter::operator+=, py::arg("counter"), py::return_value_policy::reference);
    }
} /* bindExamplesLibOperatorsCounterPygen */
