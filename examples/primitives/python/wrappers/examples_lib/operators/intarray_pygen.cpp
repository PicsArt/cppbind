/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 02/07/2022-18:26.
 * Please do not change it manually.
 */

#include <pybind11/pybind11.h>
#include <pybind11/stl.h>
#include <pybind11/functional.h>

#include "cxx/operators/intarray.hpp"

namespace py = pybind11;

void bindExamplesLibOperatorsIntarray(py::module& m) {
    {
        using namespace iegen::example;
        py::class_<iegen::example::IntArray> intArray(m, "IntArray");
        
        intArray.def(py::init<>());
        intArray.def("__getitem__", py::overload_cast<int>(&iegen::example::IntArray::operator[]), py::arg("i"), py::return_value_policy::automatic);
        intArray.def("__setitem__", [](iegen::example::IntArray& self, int i, int value){ self[i] = value; });
        intArray.def("__getitem__", py::overload_cast<std::string>(&iegen::example::IntArray::operator[]), py::arg("i"), py::return_value_policy::automatic);
        intArray.def("__getitem__", py::overload_cast<double>(&iegen::example::IntArray::operator[]), py::arg("i"), py::return_value_policy::automatic);
    }
} /* bindExamplesLibOperatorsIntarray */
