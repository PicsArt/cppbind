/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 04/12/2022-06:07.
 * Please do not change it manually.
 */

#include <pybind11/pybind11.h>
#include <pybind11/stl.h>
#include <pybind11/functional.h>

#include "cxx/overloads/utils.hpp"

namespace py = pybind11;

void bindExamplesLibOverloadsUtilsPygen(py::module& m) {
    {
        using namespace iegen::example;
        py::class_<iegen::example::Utils, std::shared_ptr<iegen::example::Utils>> utils(m, "Utils");
        
        utils.def(py::init<>());
        utils.def_static("sum", py::overload_cast<int, int>(&iegen::example::Utils::sum), py::arg("first"), py::arg("second"), py::return_value_policy::automatic);
        utils.def_static("sum", py::overload_cast<float, float>(&iegen::example::Utils::sum), py::arg("first"), py::arg("second"), py::return_value_policy::automatic);
        utils.def("concatenate", py::overload_cast<std::string, std::string>(&iegen::example::Utils::concatenate), py::arg("first"), py::arg("second"), py::return_value_policy::automatic);
        utils.def("concatenate", py::overload_cast<std::string, std::string, std::string>(&iegen::example::Utils::concatenate), py::arg("first"), py::arg("second"), py::arg("third"), py::return_value_policy::automatic);
        utils.def_static("minus", py::overload_cast<int, int>(&iegen::example::Utils::sub), py::arg("first"), py::arg("second"), py::return_value_policy::automatic);
        utils.def_static("minus", py::overload_cast<float, float>(&iegen::example::Utils::sub), py::arg("first"), py::arg("second"), py::return_value_policy::automatic);
    }
} /* bindExamplesLibOverloadsUtilsPygen */
