/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 02/16/2022-06:24.
 * Please do not change it manually.
 */

#include <pybind11/pybind11.h>
#include <pybind11/stl.h>
#include <pybind11/functional.h>

#include "cxx/shared_ptr/shared_ptr.hpp"

namespace py = pybind11;

void bindExamplesLibSharedPtrSharedPtr(py::module& m) {
    {
        using namespace Example;
        py::class_<Example::Car, std::shared_ptr<Example::Car>> car(m, "Car");
        
        car.def(py::init<int>(), py::arg("cost"));

        car.def_property_readonly("cost", &Example::Car::cost, py::return_value_policy::reference_internal);
        car.def("set_cost_with_car_shared_ptr", &Example::Car::setCostWithCarSharedPtr, py::arg("sp"));
        car.def("set_cost_with_car", &Example::Car::setCostWithCar, py::arg("sp"));
        car.def("set_cost_with_car_const_shared_ptr", &Example::Car::setCostWithCarConstSharedPtr, py::arg("sp"));
        car.def("make_const_shared_ptr", &Example::Car::makeConstSharedPtr, py::arg("sp"), py::return_value_policy::automatic);
        car.def("set_cost_with_car_ref", &Example::Car::setCostWithCarRef, py::arg("sp"));
        car.def("set_cost_with_car_ptr", &Example::Car::setCostWithCarPtr, py::arg("sp"));
        car.def("get_new_car_shared_ptr", &Example::Car::getNewCarSharedPtr, py::return_value_policy::automatic);
    }
    {
        using namespace Example;
        py::class_<Example::CarUsage> carUsage(m, "CarUsage");
        
        carUsage.def(py::init<Example::Car *>(), py::arg("car"));
        carUsage.def("get_car", &Example::CarUsage::getCar, py::return_value_policy::automatic);
    }
} /* bindExamplesLibSharedPtrSharedPtr */
