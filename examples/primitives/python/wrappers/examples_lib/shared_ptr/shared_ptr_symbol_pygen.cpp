/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 02/07/2022-10:05.
 * Please do not change it manually.
 */

#include <pybind11/pybind11.h>
#include <pybind11/stl.h>
#include <pybind11/functional.h>

#include "cxx/shared_ptr/shared_ptr_symbol.hpp"

namespace py = pybind11;

void bindIegenExampleSignShared(py::module& m) {
    using namespace iegen::example;
    py::class_<iegen::example::SignShared, std::shared_ptr<iegen::example::SignShared>> signShared(m, "SignShared");

    signShared.def(py::init<>());
    signShared.def("type_name", &iegen::example::SignShared::typeName, py::return_value_policy::automatic);
}
void bindIegenExampleTextShared(py::module& m) {
    using namespace iegen::example;
    py::class_<iegen::example::TextShared, std::shared_ptr<iegen::example::TextShared>> textShared(m, "TextShared");

    textShared.def(py::init<>());
    textShared.def("type_name", &iegen::example::TextShared::typeName, py::return_value_policy::automatic);
}
void bindIegenExampleDigitShared(py::module& m) {
    using namespace iegen::example;
    py::class_<iegen::example::DigitShared, std::shared_ptr<iegen::example::DigitShared>, iegen::example::SignShared, iegen::example::TextShared> digitShared(m, "DigitShared");

    digitShared.def(py::init<>());
    digitShared.def("type_name", &iegen::example::DigitShared::typeName, py::return_value_policy::automatic);
}
void bindIegenExampleSymbolUsageShared(py::module& m) {
    using namespace iegen::example;
    py::class_<iegen::example::SymbolUsageShared> symbolUsageShared(m, "SymbolUsageShared");

    symbolUsageShared.def(py::init<>());

    symbolUsageShared.def(py::init<std::shared_ptr<DigitShared>>(), py::arg("d"));
    symbolUsageShared.def("get_text_type", &iegen::example::SymbolUsageShared::getTextType, py::arg("t"), py::return_value_policy::automatic);
    symbolUsageShared.def("get_sign_type", &iegen::example::SymbolUsageShared::getSignType, py::arg("s"), py::return_value_policy::automatic);
    symbolUsageShared.def("get_text_id", &iegen::example::SymbolUsageShared::getTextId, py::arg("t"), py::return_value_policy::automatic);
    symbolUsageShared.def("get_sign_id", &iegen::example::SymbolUsageShared::getSignId, py::arg("s"), py::return_value_policy::automatic);
    symbolUsageShared.def("get_text_ptr", &iegen::example::SymbolUsageShared::getTextPtr, py::return_value_policy::automatic);
    symbolUsageShared.def("get_sign_ptr", &iegen::example::SymbolUsageShared::getSignPtr, py::return_value_policy::automatic);
}
