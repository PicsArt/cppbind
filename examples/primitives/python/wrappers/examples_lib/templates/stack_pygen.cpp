/**
 * ,--.,------. ,----.   ,------.,--.  ,--.
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  |
 * |  ||  `--, |  | .---.|  `--, |  |' '  |
 * |  ||  `---.'  '--'  ||  `---.|  | `   |
 * `--'`------' `------' `------'`--'  `--'
 * 
 * This file is generated by iegen on 12/04/2021-12:25.
 * Please do not change it manually.
 */

#include <pybind11/pybind11.h>
#include <pybind11/stl.h>
#include <pybind11/functional.h>

#include "cxx/templates/stack.hpp"
#include "cxx/simple/project.hpp"
#include "cxx/simple/task.hpp"
#include "cxx/getters/number.hpp"

namespace py = pybind11;

void bindIegenExampleStackPrj(py::module& m) {
    using namespace iegen::example;
    py::class_<iegen::example::Stack<iegen::example::Project>> stackPrj(m, "StackPrj");

    stackPrj.def(py::init<>());

    stackPrj.def(py::init<iegen::example::Project &>(), py::arg("st"));
    stackPrj.def("push", &iegen::example::Stack<iegen::example::Project>::push, py::arg("item"));
    stackPrj.def("pop", &iegen::example::Stack<iegen::example::Project>::pop);
    stackPrj.def("top", &iegen::example::Stack<iegen::example::Project>::top);
    stackPrj.def("empty", &iegen::example::Stack<iegen::example::Project>::empty);
}
void bindIegenExampleStackPyTask(py::module& m) {
    using namespace iegen::example;
    py::class_<iegen::example::Stack<iegen::example::Task>> stackPyTask(m, "StackPyTask");

    stackPyTask.def(py::init<>());

    stackPyTask.def(py::init<iegen::example::Task &>(), py::arg("st"));
    stackPyTask.def("push", &iegen::example::Stack<iegen::example::Task>::push, py::arg("item"));
    stackPyTask.def("pop", &iegen::example::Stack<iegen::example::Task>::pop);
    stackPyTask.def("top", &iegen::example::Stack<iegen::example::Task>::top);
    stackPyTask.def("empty", &iegen::example::Stack<iegen::example::Task>::empty);
}
void bindIegenExampleStackNumInt(py::module& m) {
    using namespace iegen::example;
    py::class_<iegen::example::Stack<iegen::example::Number<int>>> stackNumInt(m, "StackNumInt");

    stackNumInt.def(py::init<>());

    stackNumInt.def(py::init<iegen::example::Number<int> &>(), py::arg("st"));
    stackNumInt.def("push", &iegen::example::Stack<iegen::example::Number<int>>::push, py::arg("item"));
    stackNumInt.def("pop", &iegen::example::Stack<iegen::example::Number<int>>::pop);
    stackNumInt.def("top", &iegen::example::Stack<iegen::example::Number<int>>::top);
    stackNumInt.def("empty", &iegen::example::Stack<iegen::example::Number<int>>::empty);
}