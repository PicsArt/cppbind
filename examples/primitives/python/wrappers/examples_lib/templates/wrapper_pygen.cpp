/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 02/07/2022-18:26.
 * Please do not change it manually.
 */

#include <pybind11/pybind11.h>
#include <pybind11/stl.h>
#include <pybind11/functional.h>

#include "cxx/templates/wrapper.hpp"

namespace py = pybind11;

void bindExamplesLibTemplatesWrapper(py::module& m) {
    {
        using namespace iegen::example;
        py::class_<iegen::example::Wrapper<std::pair<std::string, std::string>>> wrapperPairStrings(m, "WrapperPairStrings");
        
        wrapperPairStrings.def(py::init<const std::pair<std::string, std::string> &>(), py::arg("value"));

        wrapperPairStrings.def_property("value", py::cpp_function(&iegen::example::Wrapper<std::pair<std::string, std::string>>::value, py::return_value_policy::reference_internal), &iegen::example::Wrapper<std::pair<std::string, std::string>>::setValue);
    }
    {
        using namespace iegen::example;
        py::class_<iegen::example::Wrapper<std::pair<int, int>>> wrapperPairIntInt(m, "WrapperPairIntInt");
        
        wrapperPairIntInt.def(py::init<const std::pair<int, int> &>(), py::arg("value"));

        wrapperPairIntInt.def_property("value", py::cpp_function(&iegen::example::Wrapper<std::pair<int, int>>::value, py::return_value_policy::reference_internal), &iegen::example::Wrapper<std::pair<int, int>>::setValue);
    }
    {
        using namespace iegen::example;
        py::class_<iegen::example::Wrapper<std::string>> wrapperString(m, "WrapperString");
        
        wrapperString.def(py::init<const std::string &>(), py::arg("value"));

        wrapperString.def_property("value", py::cpp_function(&iegen::example::Wrapper<std::string>::value, py::return_value_policy::reference_internal), &iegen::example::Wrapper<std::string>::setValue);
    }
} /* bindExamplesLibTemplatesWrapper */
