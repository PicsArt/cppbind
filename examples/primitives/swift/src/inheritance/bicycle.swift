/**
 * ,--.,------. ,----.   ,------.,--.  ,--.
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  |
 * |  ||  `--, |  | .---.|  `--, |  |' '  |
 * |  ||  `---.'  '--'  ||  `---.|  | `   |
 * `--'`------' `------' `------'`--'  `--'
 * 
 * This file is generated by iegen on 11/10/2021-06:30.
 * Please do not change it manually.
 */

import CWrapper
import Foundation

public class Bicycle: Vehicle {
  public convenience init(numberOfSeats: Int) {
    let swift_to_sc_numberOfSeats = CInt(numberOfSeats)
    self.init(create_Bicycle(swift_to_sc_numberOfSeats), true)
  }

  public override func type() -> String {

    var err = ErrorObj()
    let result = _func_Bicycle_type(cself, &err)
    let sc_to_swift_result = String(cString: result)
    defer {
      result.deallocate()
    }
    let errorType = Int(err.err_type)
    if errorType != 0 {
      switch errorType {
      case (1):
        let excObj = StdException(err.err_ptr, true)
        ExceptionHandler.handleUncaughtException(excObj.what())
      default:
        ExceptionHandler.handleUncaughtException("Uncaught Exception")
      }
    }
    return sc_to_swift_result
  }

}
