/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 10/15/2021-18:09.
 * Please do not change it manually.
 */

import CWrapper
import Foundation

public protocol Time : Base {

    
    
    

    var time: String { get
    }
    
}
extension Time {
    
    public var time: String {
        get {
            let result = _prop_get_Time_time(cself)
            let sc_to_swift_result = String(cString: result)
            defer{
              result.deallocate()
            }
            return sc_to_swift_result
        }
        
    }
    
}
public class TimeImpl : Time {
    public let cself : UnsafeMutableRawPointer
    public let owner : Bool

    // internal main initializer
    internal required init(_ _cself: UnsafeMutableRawPointer, _ _owner: Bool = false) {
      self.cself = _cself
      self.owner = _owner
    }
    deinit {
      if owner {
        release_TimeImpl(cself)
      }
    }

    
    public convenience init(h: Int, m: Int, s: Int) {

        let swift_to_sc_h = CInt(h)
        let swift_to_sc_m = CInt(m)
        let swift_to_sc_s = CInt(s)
        self.init(create_Time(swift_to_sc_h, swift_to_sc_m, swift_to_sc_s), true)
    }
}