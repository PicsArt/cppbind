/**
 * ,--.,------. ,----.   ,------.,--.  ,--.
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  |
 * |  ||  `--, |  | .---.|  `--, |  |' '  |
 * |  ||  `---.'  '--'  ||  `---.|  | `   |
 * `--'`------' `------' `------'`--'  `--'
 * 
 * This file is generated by iegen on 11/12/2021-15:17.
 * Please do not change it manually.
 */

import CWrapper
import Foundation

public class GeometricFigure {

  public let cself: UnsafeMutableRawPointer
  public let owner: Bool

  // internal main initializer
  internal required init(_ _cself: UnsafeMutableRawPointer, _ _owner: Bool = false) {
    self.cself = _cself
    self.owner = _owner
  }

  deinit {
    if owner {
      release_GeometricFigure(cself)
    }
  }

  public convenience init(p: Parallelogram) {
    let swiftToScP = p.cself
    self.init(create_GeometricFigure(swiftToScP), true)
  }

  public var parallelogram: Parallelogram {
    get {
      let result = _prop_get_GeometricFigure_parallelogram(cself)
      let scToSwiftResult = ParallelogramImpl(result)
      return scToSwiftResult
    }

    set(value) {
      let swiftToScValue = value.cself
      _prop_set_GeometricFigure_parallelogram(cself, swiftToScValue)
    }
  }

}

public class MyVehicle {

  public let cself: UnsafeMutableRawPointer
  public let owner: Bool

  // internal main initializer
  internal required init(_ _cself: UnsafeMutableRawPointer, _ _owner: Bool = false) {
    self.cself = _cself
    self.owner = _owner
  }

  deinit {
    if owner {
      release_MyVehicle(cself)
    }
  }

  public convenience init(v: Vehicle) {
    let swiftToScV = v.cself
    self.init(create_MyVehicle(swiftToScV), true)
  }

  public var vehicle: Vehicle {
    get {
      let result = _prop_get_MyVehicle_vehicle(cself)
      let scToSwiftResult = Vehicle(result, true)
      return scToSwiftResult
    }

    set(value) {
      let swiftToScValue = value.cself
      _prop_set_MyVehicle_vehicle(cself, swiftToScValue)
    }
  }

}
