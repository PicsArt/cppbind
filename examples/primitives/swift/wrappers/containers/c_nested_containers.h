/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 12/21/2021-09:26.
 * Please do not change it manually.
 */

#ifndef _C_nested_containers_WRAPPER_
#define _C_nested_containers_WRAPPER_

#include "swift/wrappers/c_helpers.h"

#include <stdbool.h>

#if __cplusplus
extern "C" {
#endif
    void release_NestedExamples(CObject cself, bool owner);

    CObject create_NestedExamples(ErrorObj* _Nonnull err);
    void _func_NestedExamples_setNestedIntVector(CObject cself, CDataArray  v, ErrorObj* _Nonnull err);
    CDataArray _func_NestedExamples_getNestedIntVector(CObject cself, ErrorObj* _Nonnull err);
    void _func_NestedExamples_setNestedIntMap(CObject cself, CDataMap  m, ErrorObj* _Nonnull err);
    CDataMap _func_NestedExamples_getNestedIntMap(CObject cself, ErrorObj* _Nonnull err);
    void _func_NestedExamples_mixedExampleWithManyArgs(CObject cself, CDataArray  v1, CDataArray  v2, CDataMap  m1, CDataMap  m2, ErrorObj* _Nonnull err);
    void _func_NestedExamples_setVectorOfIntMaps(CObject cself, CDataArray  v, ErrorObj* _Nonnull err);
    CDataArray _func_NestedExamples_getVectorOfIntMaps(CObject cself, ErrorObj* _Nonnull err);
    void _func_NestedExamples_setMapOfIntVectors(CObject cself, CDataMap  m, ErrorObj* _Nonnull err);
    CDataMap _func_NestedExamples_getMapOfIntVectors(CObject cself, ErrorObj* _Nonnull err);
    void _func_NestedExamples_setComplexStringVector(CObject cself, CDataArray  v, ErrorObj* _Nonnull err);
    CDataArray _func_NestedExamples_getComplexStringVector(CObject cself, ErrorObj* _Nonnull err);
    void _func_NestedExamples_setComplexStringMap(CObject cself, CDataMap  m, ErrorObj* _Nonnull err);
    CDataMap _func_NestedExamples_getComplexStringMap(CObject cself, ErrorObj* _Nonnull err);
#if __cplusplus
}
#endif
#endif /* ifndef _C_nested_containers_WRAPPER_ */
