/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 12/07/2021-16:20.
 * Please do not change it manually.
 */

#include <string.h>
#include <memory>
#include "swift/wrappers/forward_decl/c_teacher.h"
#include "cxx/forward_decl/teacher.hpp"
#include "cxx/forward_decl/student.hpp"

using namespace iegen::example;

void release_Teacher(void* _Nonnull cself) {
    delete static_cast<iegen::example::Teacher*>(cself);
}

void* _Nonnull create_Teacher(ErrorObj* _Nonnull err){
    try {
        auto this_object = new iegen::example::Teacher();
        return this_object;
    }
    catch (const std::exception& e) {
        err->err_type = 1;
        err->err_ptr = new std::exception(e);
    }
    catch (...) {
        err->err_type = -1;
    }
    void* result = nullptr;
    return result;
}

void _func_Teacher_addStudent(void* _Nonnull cself, void* _Nonnull s, ErrorObj* _Nonnull err){
    
    std::shared_ptr<iegen::example::Student> ctocxxs;
    ctocxxs = *static_cast<std::shared_ptr<iegen::example::Student>*>(s);
  
    
    auto ctocxxcself = static_cast<iegen::example::Teacher*>(cself);
    try {
        ctocxxcself->addStudent(ctocxxs);
    }
    catch (const std::exception& e) {
        err->err_type = 1;
        err->err_ptr = new std::exception(e);
    }
    catch (...) {
        err->err_type = -1;
    }
}

CDataArray _func_Teacher_students(void* _Nonnull cself, ErrorObj* _Nonnull err){
    
    auto ctocxxcself = static_cast<iegen::example::Teacher*>(cself);
    try {
        const auto& result = ctocxxcself->students();
        auto _data_cxxtocresult = new void* [result.size()];
        CDataArray cxxtocresult = { _data_cxxtocresult, (long long)result.size() };
        for (int _i_result = 0; _i_result < result.size(); ++_i_result) {
            auto& value_result = result[_i_result];
            
            void* cxxtocvalue_result;
            cxxtocvalue_result = reinterpret_cast<void*>(new std::shared_ptr<iegen::example::Student>(value_result));
            _data_cxxtocresult[_i_result] = cxxtocvalue_result;
        }
        return cxxtocresult;
    }
    catch (const std::exception& e) {
        err->err_type = 1;
        err->err_ptr = new std::exception(e);
    }
    catch (...) {
        err->err_type = -1;
    }
    CDataArray result;
    return result;
}