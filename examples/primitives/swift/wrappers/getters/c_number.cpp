/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 11/30/2021-08:56.
 * Please do not change it manually.
 */

#include <string.h>
#include <cxxabi.h>
#include <memory>
#include "swift/wrappers/getters/c_number.h"
#include "cxx/getters/number.hpp"

using namespace iegen::example;

void release_NumberInt(CDataObj cself) {
    delete static_cast<iegen::example::Number<int>*>(cself.ptr);
}

CDataObj create_NumberInt(int n){
    
    auto this_object = new iegen::example::Number<int>(n);
    return {0, this_object};
}

int _func_NumberInt_toInt(CDataObj cself, ErrorObj* _Nonnull err){
    
    auto c_to_cxx_cself = static_cast<iegen::example::Number<int>*>(cself.ptr);
    try {
        const auto& result = c_to_cxx_cself->toInt();
        
        return result;
    }
    catch (const std::exception& e) {
        err->err_type = 1;
        err->err_ptr = new std::exception(e);
    }
    catch (...) {
        err->err_type = -1;
    }
    int result;
    return result;
}
int _prop_get_NumberInt_num(CDataObj cself){
    auto c_to_cxx_cself = static_cast<iegen::example::Number<int>*>(cself.ptr);
    const auto& result = c_to_cxx_cself->num;
    
    return result;
}
void _prop_set_NumberInt_num(CDataObj cself, int num){
    
    auto c_to_cxx_cself = static_cast<iegen::example::Number<int>*>(cself.ptr);
    
    c_to_cxx_cself->num = num;
}

void release_NumberDouble(CDataObj cself) {
    delete static_cast<iegen::example::Number<double>*>(cself.ptr);
}

CDataObj create_NumberDouble(double n){
    
    auto this_object = new iegen::example::Number<double>(n);
    return {0, this_object};
}

int _func_NumberDouble_toInt(CDataObj cself, ErrorObj* _Nonnull err){
    
    auto c_to_cxx_cself = static_cast<iegen::example::Number<double>*>(cself.ptr);
    try {
        const auto& result = c_to_cxx_cself->toInt();
        
        return result;
    }
    catch (const std::exception& e) {
        err->err_type = 1;
        err->err_ptr = new std::exception(e);
    }
    catch (...) {
        err->err_type = -1;
    }
    int result;
    return result;
}
double _prop_get_NumberDouble_num(CDataObj cself){
    auto c_to_cxx_cself = static_cast<iegen::example::Number<double>*>(cself.ptr);
    const auto& result = c_to_cxx_cself->num;
    
    return result;
}
void _prop_set_NumberDouble_num(CDataObj cself, double num){
    
    auto c_to_cxx_cself = static_cast<iegen::example::Number<double>*>(cself.ptr);
    
    c_to_cxx_cself->num = num;
}
