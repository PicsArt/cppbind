/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 01/21/2022-14:54.
 * Please do not change it manually.
 */

#include <iostream>
#include <string.h>
#include <cxxabi.h>
#include <memory>
#include "swift/wrappers/getters/c_person.h"
#include "cxx/getters/person.hpp"



using namespace iegen::example;

void release_Person(CObject cself, bool owner) {
    delete cself.type;
    if (owner) {
        delete static_cast<std::shared_ptr<iegen::example::Person>*>(cself.ptr);
    }
}

CObject create_Person(char* _Nonnull name, char* _Nonnull email, int age, ErrorObj* _Nonnull err){
    auto ctocxxname = std::string(name);
    free(name);
    auto ctocxxemail = std::string(email);
    free(email);
    
    try {
        auto this_object = new iegen::example::Person(ctocxxname, ctocxxemail, age);
        return {strdup("iegen::example::Person"), new std::shared_ptr<iegen::example::Person>(this_object)};
    }
    catch (const std::exception& e) {
        err->err_type = 1;
        err->err_ptr = new std::exception(e);
    }
    catch (...) {
        err->err_type = -1;
    }
    CObject result{};
    return result;
}

char* _Nonnull _prop_get_Person_name(CObject cself){
    std::shared_ptr<iegen::example::Person> ctocxxcself;
    if (strcmp(cself.type, "iegen::example::Person") == 0)
        ctocxxcself = *static_cast<std::shared_ptr<iegen::example::Person>*>(cself.ptr);
    else {
        std::cerr << "Unexpected object type: " << cself.type << std::endl;
        exit(1);
    }
    const auto& result = ctocxxcself->fullName();
    auto cxxtocresult = strdup(result.data());
    return cxxtocresult;
}

void _prop_set_Person_name(CObject cself, char* _Nonnull val){
    
    std::shared_ptr<iegen::example::Person> ctocxxcself;
    if (strcmp(cself.type, "iegen::example::Person") == 0)
        ctocxxcself = *static_cast<std::shared_ptr<iegen::example::Person>*>(cself.ptr);
    else {
        std::cerr << "Unexpected object type: " << cself.type << std::endl;
        exit(1);
    }
    auto ctocxxval = std::string(val);
    free(val);
    ctocxxcself->setFullName(ctocxxval);
}

char* _Nonnull _prop_get_Person_email(CObject cself){
    std::shared_ptr<iegen::example::Person> ctocxxcself;
    if (strcmp(cself.type, "iegen::example::Person") == 0)
        ctocxxcself = *static_cast<std::shared_ptr<iegen::example::Person>*>(cself.ptr);
    else {
        std::cerr << "Unexpected object type: " << cself.type << std::endl;
        exit(1);
    }
    const auto& result = ctocxxcself->_email;
    auto cxxtocresult = strdup(result.data());
    return cxxtocresult;
}
int _prop_get_Person_age(CObject cself){
    std::shared_ptr<iegen::example::Person> ctocxxcself;
    if (strcmp(cself.type, "iegen::example::Person") == 0)
        ctocxxcself = *static_cast<std::shared_ptr<iegen::example::Person>*>(cself.ptr);
    else {
        std::cerr << "Unexpected object type: " << cself.type << std::endl;
        exit(1);
    }
    const auto& result = ctocxxcself->_age;
    
    return result;
}
void _prop_set_Person_age(CObject cself, int age){
    
    std::shared_ptr<iegen::example::Person> ctocxxcself;
    if (strcmp(cself.type, "iegen::example::Person") == 0)
        ctocxxcself = *static_cast<std::shared_ptr<iegen::example::Person>*>(cself.ptr);
    else {
        std::cerr << "Unexpected object type: " << cself.type << std::endl;
        exit(1);
    }
    
    ctocxxcself->_age = age;
}

