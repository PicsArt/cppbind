/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 12/02/2021-15:46.
 * Please do not change it manually.
 */

#include <string.h>
#include <cxxabi.h>
#include <memory>
#include "swift/wrappers/getters/c_person.h"
#include "cxx/getters/person.hpp"

using namespace iegen::example;

void release_Person(CObject cself) {
    delete static_cast<std::shared_ptr<iegen::example::Person>*>(cself.ptr);
}

CObject create_Person(char* _Nonnull name, char* _Nonnull email, int age){
    auto c_to_cxx_name = std::string(name);
    free(name);
    auto c_to_cxx_email = std::string(email);
    free(email);
    
    auto this_object = new iegen::example::Person(c_to_cxx_name, c_to_cxx_email, age);
    return {strdup("iegen::example::Person"), new std::shared_ptr<iegen::example::Person>(this_object)};
}

char* _Nonnull _prop_get_Person_name(CObject cself){
    std::shared_ptr<iegen::example::Person> c_to_cxx_cself;
    c_to_cxx_cself = *static_cast<std::shared_ptr<iegen::example::Person>*>(cself.ptr);
    const auto& result = c_to_cxx_cself->fullName();
    auto cxx_to_c_result = strdup(result.data());
    return cxx_to_c_result;
}

void _prop_set_Person_name(CObject cself, char* _Nonnull val){
    
    std::shared_ptr<iegen::example::Person> c_to_cxx_cself;
    c_to_cxx_cself = *static_cast<std::shared_ptr<iegen::example::Person>*>(cself.ptr);
    auto c_to_cxx_val = std::string(val);
    free(val);
    c_to_cxx_cself->setFullName(c_to_cxx_val);
}

char* _Nonnull _prop_get_Person_email(CObject cself){
    std::shared_ptr<iegen::example::Person> c_to_cxx_cself;
    c_to_cxx_cself = *static_cast<std::shared_ptr<iegen::example::Person>*>(cself.ptr);
    const auto& result = c_to_cxx_cself->_email;
    auto cxx_to_c_result = strdup(result.data());
    return cxx_to_c_result;
}
int _prop_get_Person_age(CObject cself){
    std::shared_ptr<iegen::example::Person> c_to_cxx_cself;
    c_to_cxx_cself = *static_cast<std::shared_ptr<iegen::example::Person>*>(cself.ptr);
    const auto& result = c_to_cxx_cself->_age;
    
    return result;
}
void _prop_set_Person_age(CObject cself, int age){
    
    std::shared_ptr<iegen::example::Person> c_to_cxx_cself;
    c_to_cxx_cself = *static_cast<std::shared_ptr<iegen::example::Person>*>(cself.ptr);
    
    c_to_cxx_cself->_age = age;
}
