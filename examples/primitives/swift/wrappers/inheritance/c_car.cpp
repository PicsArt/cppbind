/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 03/29/2022-15:31.
 * Please do not change it manually.
 */

#include <iostream>
#include <stdlib.h>
#include <string.h>
#include <cxxabi.h>
#include <memory>
#include <type_traits>
#include "swift/wrappers/inheritance/c_car.h"
#include "cxx/inheritance/car.hpp"

using namespace iegen::example;

void release_IegenExample_MyCar(IEGenCObject cself, bool owner) {
    if (owner) {
        delete static_cast<std::shared_ptr<iegen::example::MyCar>*>(cself.ptr);
    }
    free(cself.type);
}

IEGenCObject create_IegenExample_MyCar(int numberOfSeats, IEGenCObject* _Nonnull iegen_err) {
    try {
        auto this_object = new iegen::example::MyCar(numberOfSeats);
        return {strdup("iegen::example::MyCar"), new std::shared_ptr<iegen::example::MyCar>(this_object)};
    } catch (const std::exception& e) {
        iegen_err->type = strdup("std::exception");
        iegen_err->ptr = new std::exception(e);
    } catch (...) {
        iegen_err->type = strdup("Uncaught Exception");
    }
    IEGenCObject result {};
    return result;
}

char* _Nonnull _func_IegenExample_MyCar_type(IEGenCObject cself, IEGenCObject* _Nonnull iegen_err) {
    std::shared_ptr<iegen::example::MyCar> ctocxxcself;
    ctocxxcself = *static_cast<std::shared_ptr<iegen::example::MyCar>*>(cself.ptr);
    try {
        const auto& result = ctocxxcself->type();
        auto cxxtocresult = strdup(result.data());
        return cxxtocresult;
    } catch (const std::exception& e) {
        iegen_err->type = strdup("std::exception");
        iegen_err->ptr = new std::exception(e);
    } catch (...) {
        iegen_err->type = strdup("Uncaught Exception");
    }
    char* result {};
    return result;
}

