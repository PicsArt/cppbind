/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 11/30/2021-08:57.
 * Please do not change it manually.
 */

#include <string.h>
#include <cxxabi.h>
#include <memory>
#include "swift/wrappers/inheritance/c_rectangle.h"
#include "cxx/inheritance/rectangle.hpp"
#include "cxx/inheritance/parallelogram.hpp"

using namespace iegen::example;

void release_RectangleImpl(CDataObj cself){
    delete dynamic_cast<iegen::example::Rectangle*>(static_cast<iegen::example::Parallelogram*>(cself.ptr));
}

CDataObj create_Rectangle(double length, double width){
    
    
    auto this_object = new iegen::example::Rectangle(length, width);
    return {0, static_cast<iegen::example::Parallelogram*>(this_object)};
}

double _prop_get_Rectangle_area(CDataObj cself){
    // we might need to avoid dynamic_cast if there is no multiple inheritance
    auto c_to_cxx_cself = dynamic_cast<iegen::example::Rectangle*>(static_cast<iegen::example::Parallelogram*>(cself.ptr));
    const auto& result = c_to_cxx_cself->area();
    
    return result;
}

double _prop_get_Rectangle_length(CDataObj cself){
    // we might need to avoid dynamic_cast if there is no multiple inheritance
    auto c_to_cxx_cself = dynamic_cast<iegen::example::Rectangle*>(static_cast<iegen::example::Parallelogram*>(cself.ptr));
    const auto& result = c_to_cxx_cself->length();
    
    return result;
}

double _prop_get_Rectangle_width(CDataObj cself){
    // we might need to avoid dynamic_cast if there is no multiple inheritance
    auto c_to_cxx_cself = dynamic_cast<iegen::example::Rectangle*>(static_cast<iegen::example::Parallelogram*>(cself.ptr));
    const auto& result = c_to_cxx_cself->width();
    
    return result;
}