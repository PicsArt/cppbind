/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 12/21/2021-09:26.
 * Please do not change it manually.
 */

#include <string.h>
#include <cxxabi.h>
#include <memory>
#include "swift/wrappers/inheritance/c_rectangle.h"
#include "cxx/inheritance/rectangle.hpp"
#include "cxx/inheritance/parallelogram.hpp"

using namespace iegen::example;

void release_RectangleImpl(CObject cself, bool owner){
    delete cself.type;
    if (owner) {
        delete dynamic_cast<iegen::example::Rectangle*>(static_cast<iegen::example::Parallelogram*>(cself.ptr));
    }
}

CObject create_Rectangle(double length, double width, ErrorObj* _Nonnull err){
    
    
    try {
        auto this_object = new iegen::example::Rectangle(length, width);
        return {strdup("iegen::example::Rectangle"), static_cast<iegen::example::Parallelogram*>(this_object)};
    }
    catch (const std::exception& e) {
        err->err_type = 1;
        err->err_ptr = new std::exception(e);
    }
    catch (...) {
        err->err_type = -1;
    }
    CObject result{};
    return result;
}

double _prop_get_Rectangle_area(CObject cself){
    // we might need to avoid dynamic_cast if there is no multiple inheritance
    auto ctocxxcself = dynamic_cast<iegen::example::Rectangle*>(static_cast<iegen::example::Parallelogram*>(cself.ptr));
    const auto& result = ctocxxcself->area();
    
    return result;
}

double _prop_get_Rectangle_length(CObject cself){
    // we might need to avoid dynamic_cast if there is no multiple inheritance
    auto ctocxxcself = dynamic_cast<iegen::example::Rectangle*>(static_cast<iegen::example::Parallelogram*>(cself.ptr));
    const auto& result = ctocxxcself->length();
    
    return result;
}

double _prop_get_Rectangle_width(CObject cself){
    // we might need to avoid dynamic_cast if there is no multiple inheritance
    auto ctocxxcself = dynamic_cast<iegen::example::Rectangle*>(static_cast<iegen::example::Parallelogram*>(cself.ptr));
    const auto& result = ctocxxcself->width();
    
    return result;
}
