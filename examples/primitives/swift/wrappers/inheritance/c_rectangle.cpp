/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 02/07/2022-12:05.
 * Please do not change it manually.
 */

#include <iostream>
#include <stdlib.h>
#include <string.h>
#include <cxxabi.h>
#include <memory>
#include <type_traits>
#include "swift/wrappers/inheritance/c_rectangle.h"
#include "cxx/inheritance/rectangle.hpp"
#include "cxx/inheritance/parallelogram.hpp"
#include "cxx/inheritance/square.hpp"

using namespace iegen::example;

void release_RectangleImpl(IEGenCObject cself, bool owner){
    static_assert(std::has_virtual_destructor<iegen::example::Rectangle>::value, "iegen::example::Rectangle type must have virtual destructor");
    free(cself.type);
    if (owner) {
        delete static_cast<iegen::example::Rectangle*>(cself.ptr);
    }
}

IEGenCObject create_Rectangle(double length, double width, IEGenCObject* _Nonnull err){
    
    
    try {
        auto this_object = new iegen::example::Rectangle(length, width);
        return {strdup("iegen::example::Rectangle"), this_object};
    }
    catch (const std::exception& e) {
        err->type = strdup("std::exception");
        err->ptr = new std::exception(e);
    }
    catch (...) {
        err->type = strdup("Uncaught Exception");
    }
    IEGenCObject result {};
    return result;
}

double _prop_get_Rectangle_area(IEGenCObject cself){iegen::example::Rectangle* ctocxxcself_ptr = nullptr;
    if (cself.ptr) {
        if (strcmp(cself.type, "iegen::example::Rectangle") == 0)
            ctocxxcself_ptr = static_cast<iegen::example::Rectangle*>(cself.ptr);
        else if (strcmp(cself.type, "iegen::example::Square") == 0)
            ctocxxcself_ptr = static_cast<iegen::example::Square*>(cself.ptr);
        else {
            std::cerr << "Unexpected object type: " << cself.type << std::endl;
            exit(1);
        }
    }
    auto ctocxxcself = ctocxxcself_ptr;
    const auto& result = ctocxxcself->area();
    
    return result;
}

double _prop_get_Rectangle_length(IEGenCObject cself){iegen::example::Rectangle* ctocxxcself_ptr = nullptr;
    if (cself.ptr) {
        if (strcmp(cself.type, "iegen::example::Rectangle") == 0)
            ctocxxcself_ptr = static_cast<iegen::example::Rectangle*>(cself.ptr);
        else if (strcmp(cself.type, "iegen::example::Square") == 0)
            ctocxxcself_ptr = static_cast<iegen::example::Square*>(cself.ptr);
        else {
            std::cerr << "Unexpected object type: " << cself.type << std::endl;
            exit(1);
        }
    }
    auto ctocxxcself = ctocxxcself_ptr;
    const auto& result = ctocxxcself->length();
    
    return result;
}

double _prop_get_Rectangle_width(IEGenCObject cself){iegen::example::Rectangle* ctocxxcself_ptr = nullptr;
    if (cself.ptr) {
        if (strcmp(cself.type, "iegen::example::Rectangle") == 0)
            ctocxxcself_ptr = static_cast<iegen::example::Rectangle*>(cself.ptr);
        else if (strcmp(cself.type, "iegen::example::Square") == 0)
            ctocxxcself_ptr = static_cast<iegen::example::Square*>(cself.ptr);
        else {
            std::cerr << "Unexpected object type: " << cself.type << std::endl;
            exit(1);
        }
    }
    auto ctocxxcself = ctocxxcself_ptr;
    const auto& result = ctocxxcself->width();
    
    return result;
}
