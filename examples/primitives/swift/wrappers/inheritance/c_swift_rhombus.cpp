/**
 *   ______ .______   .______   .______    __  .__   __.  _______  
 *  /      ||   _  \  |   _  \  |   _  \  |  | |  \ |  | |       \ 
 * |  ,----'|  |_)  | |  |_)  | |  |_)  | |  | |   \|  | |  .--.  |
 * |  |     |   ___/  |   ___/  |   _  <  |  | |  . `  | |  |  |  |
 * |  `----.|  |      |  |      |  |_)  | |  | |  |\   | |  '--'  |
 *  \______|| _|      | _|      |______/  |__| |__| \__| |_______/ 
 * 
 * This file is generated by cppbind on 06/09/2022-13:05.
 * Please do not change it manually.
 */

#include <iostream>
#include <stdlib.h>
#include <string.h>
#include <cxxabi.h>
#include <memory>
#include <type_traits>
#include "swift/wrappers/inheritance/c_swift_rhombus.h"
#include "cxx/inheritance/rhombus.hpp"
#include "cxx/inheritance/square.hpp"

extern const char* CPPBIND_CPPBIND_EXAMPLE_SQUARE;
extern const char* CPPBIND_STD_STDEXCEPTION;

const char* CPPBIND_CPPBIND_EXAMPLE_RHOMBUSFIGURE = "cppbind::example::Rhombus";

using namespace cppbind::example;

void release_CppbindExample_RhombusFigureImpl(CppBindCObject cself, bool owner) {
    static_assert(std::has_virtual_destructor<cppbind::example::Rhombus>::value, "cppbind::example::Rhombus type must have virtual destructor");
    if (owner) {
        if (strcmp(cself.type, CPPBIND_CPPBIND_EXAMPLE_RHOMBUSFIGURE) == 0)
            delete static_cast<cppbind::example::Rhombus*>(cself.ptr);
        else if (strcmp(cself.type, CPPBIND_CPPBIND_EXAMPLE_SQUARE) == 0)
            delete static_cast<cppbind::example::Square*>(cself.ptr);
        else {
            std::cerr << "Unexpected object type: " << cself.type << std::endl;
            exit(1);
        }
    }
    free(cself.type);
}

cppbind::example::Rhombus* recover_obj_from_CppbindExample_RhombusFigure(CppBindCObject cppbindObj) {
    if (cppbindObj.ptr) {
        if (strcmp(cppbindObj.type, CPPBIND_CPPBIND_EXAMPLE_RHOMBUSFIGURE) == 0)
            return static_cast<cppbind::example::Rhombus*>(cppbindObj.ptr);
        else if (strcmp(cppbindObj.type, CPPBIND_CPPBIND_EXAMPLE_SQUARE) == 0)
            return static_cast<cppbind::example::Square*>(cppbindObj.ptr);
        else {
            std::cerr << "Unexpected object type: " << cppbindObj.type << std::endl;
            exit(1);
        }
    }
    return nullptr;
}

CppBindCObject create_CppbindExample_RhombusFigure(double diagonal1, double diagonal2, CppBindCObject* _Nonnull cppbind_err) {
    try {
        auto this_object = new cppbind::example::Rhombus(diagonal1, diagonal2);
        return {strdup(CPPBIND_CPPBIND_EXAMPLE_RHOMBUSFIGURE), this_object};
    } catch (const std::exception& e) {
        cppbind_err->type = strdup(CPPBIND_STD_STDEXCEPTION);
        cppbind_err->ptr = new std::exception(e);
    } catch (...) {
        cppbind_err->type = strdup("Uncaught Exception");
    }
    CppBindCObject result {};
    return result;
}

