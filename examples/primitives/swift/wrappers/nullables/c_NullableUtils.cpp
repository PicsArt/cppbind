/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 11/30/2021-09:10.
 * Please do not change it manually.
 */

#include <string.h>
#include <cxxabi.h>
#include <memory>
#include "swift/wrappers/nullables/c_NullableUtils.h"
#include "cxx/nullables/nullable_utils.hpp"

using namespace iegen::example::nullable;

void release_NumInt(CDataObj cself) {
    delete static_cast<std::shared_ptr<iegen::example::nullable::NumberInt>*>(cself.ptr);
}

CDataObj create_NumInt(int val_){
    
    auto this_object = new iegen::example::nullable::NumberInt(val_);
    return {0, new std::shared_ptr<iegen::example::nullable::NumberInt>(this_object)};
}
int _prop_get_NumInt_value(CDataObj cself){
    std::shared_ptr<iegen::example::nullable::NumberInt> c_to_cxx_cself;
    c_to_cxx_cself = *static_cast<std::shared_ptr<iegen::example::nullable::NumberInt>*>(cself.ptr);
    const auto& result = c_to_cxx_cself->value;
    
    return result;
}
void release_NumDouble(CDataObj cself) {
    delete static_cast<iegen::example::nullable::NumberDouble*>(cself.ptr);
}

CDataObj create_NumDouble(double val_){
    
    auto this_object = new iegen::example::nullable::NumberDouble(val_);
    return {0, this_object};
}
double _prop_get_NumDouble_value(CDataObj cself){
    auto c_to_cxx_cself = static_cast<iegen::example::nullable::NumberDouble*>(cself.ptr);
    const auto& result = c_to_cxx_cself->value;
    
    return result;
}
void release_NullableUtils(CDataObj cself) {
    delete static_cast<std::shared_ptr<iegen::example::nullable::Utils>*>(cself.ptr);
}

CDataObj create_NullableUtils(CDataObj num){
    
    auto c_to_cxx_num = static_cast<iegen::example::nullable::NumberDouble*>(num.ptr);
    auto this_object = new iegen::example::nullable::Utils(c_to_cxx_num);
    return {0, new std::shared_ptr<iegen::example::nullable::Utils>(this_object)};
}

CDataObj _func_NullableUtils_max(CDataObj first, CDataObj second, ErrorObj* _Nonnull err){
    
    auto c_to_cxx_first = static_cast<iegen::example::nullable::NumberDouble*>(first.ptr);
  
    
    auto c_to_cxx_second = static_cast<iegen::example::nullable::NumberDouble*>(second.ptr);
  
    try {
        const auto& result = iegen::example::nullable::Utils::max(c_to_cxx_first, c_to_cxx_second);
        
        int code_result = 0;
        CDataObj cxx_to_c_result = {code_result, const_cast<iegen::example::nullable::NumberDouble*>(result)};
        return cxx_to_c_result;
    }
    catch (const std::exception& e) {
        err->err_type = 1;
        err->err_ptr = new std::exception(e);
    }
    catch (...) {
        err->err_type = -1;
    }
    CDataObj result;
    return result;
}

CDataObj _func_NullableUtils_max_1(CDataObj first, CDataObj second, ErrorObj* _Nonnull err){
    
    std::shared_ptr<iegen::example::nullable::NumberInt> c_to_cxx_first = nullptr;
    if (first.ptr) {
        c_to_cxx_first = *static_cast<std::shared_ptr<iegen::example::nullable::NumberInt>*>(first.ptr);
    }
  
    
    std::shared_ptr<iegen::example::nullable::NumberInt> c_to_cxx_second = nullptr;
    if (second.ptr) {
        c_to_cxx_second = *static_cast<std::shared_ptr<iegen::example::nullable::NumberInt>*>(second.ptr);
    }
  
    try {
        const auto& result = iegen::example::nullable::Utils::max(c_to_cxx_first, c_to_cxx_second);
        
        int code_result = 0;
        void* cxx_to_c_result_ptr = nullptr;
        if (result) {
            cxx_to_c_result_ptr = reinterpret_cast<void*>(new std::shared_ptr<iegen::example::nullable::NumberInt>(result));
        }
        CDataObj cxx_to_c_result = {code_result, cxx_to_c_result_ptr};
        return cxx_to_c_result;
    }
    catch (const std::exception& e) {
        err->err_type = 1;
        err->err_ptr = new std::exception(e);
    }
    catch (...) {
        err->err_type = -1;
    }
    CDataObj result;
    return result;
}

void _func_NullableUtils_checkNonnullArg(CDataObj number, ErrorObj* _Nonnull err){
    
    auto c_to_cxx_number = static_cast<iegen::example::nullable::NumberDouble*>(number.ptr);
  
    try {
        iegen::example::nullable::Utils::checkNonnullArg(c_to_cxx_number);
    }
    catch (const std::exception& e) {
        err->err_type = 1;
        err->err_ptr = new std::exception(e);
    }
    catch (...) {
        err->err_type = -1;
    }
}

CDataObj _func_NullableUtils_checkNonnullReturn(ErrorObj* _Nonnull err){
    try {
        const auto& result = iegen::example::nullable::Utils::checkNonnullReturn();
        
        int code_result = 0;
        CDataObj cxx_to_c_result = {code_result, const_cast<iegen::example::nullable::NumberDouble*>(result)};
        return cxx_to_c_result;
    }
    catch (const std::exception& e) {
        err->err_type = 1;
        err->err_ptr = new std::exception(e);
    }
    catch (...) {
        err->err_type = -1;
    }
    CDataObj result;
    return result;
}

CDataObj _prop_get_NullableUtils_nullable(CDataObj cself){
    std::shared_ptr<iegen::example::nullable::Utils> c_to_cxx_cself;
    c_to_cxx_cself = *static_cast<std::shared_ptr<iegen::example::nullable::Utils>*>(cself.ptr);
    const auto& result = c_to_cxx_cself->nullable();
    
    int code_result = 0;
    CDataObj cxx_to_c_result = {code_result, const_cast<iegen::example::nullable::NumberDouble*>(result)};
    return cxx_to_c_result;
}

void _prop_set_NullableUtils_nullable(CDataObj cself, CDataObj num){
    
    std::shared_ptr<iegen::example::nullable::Utils> c_to_cxx_cself;
    c_to_cxx_cself = *static_cast<std::shared_ptr<iegen::example::nullable::Utils>*>(cself.ptr);
    
    auto c_to_cxx_num = static_cast<iegen::example::nullable::NumberDouble*>(num.ptr);
    c_to_cxx_cself->setNullable(c_to_cxx_num);
}


CDataObj _prop_get_NullableUtils_nonNull(CDataObj cself){
    std::shared_ptr<iegen::example::nullable::Utils> c_to_cxx_cself;
    c_to_cxx_cself = *static_cast<std::shared_ptr<iegen::example::nullable::Utils>*>(cself.ptr);
    const auto& result = c_to_cxx_cself->nonNull();
    
    int code_result = 0;
    CDataObj cxx_to_c_result = {code_result, const_cast<iegen::example::nullable::NumberDouble*>(result)};
    return cxx_to_c_result;
}

void _prop_set_NullableUtils_nonNull(CDataObj cself, CDataObj num){
    
    std::shared_ptr<iegen::example::nullable::Utils> c_to_cxx_cself;
    c_to_cxx_cself = *static_cast<std::shared_ptr<iegen::example::nullable::Utils>*>(cself.ptr);
    
    auto c_to_cxx_num = static_cast<iegen::example::nullable::NumberDouble*>(num.ptr);
    c_to_cxx_cself->setNonNull(c_to_cxx_num);
}

CDataObj _prop_get_NullableUtils_numDouble(CDataObj cself){
    std::shared_ptr<iegen::example::nullable::Utils> c_to_cxx_cself;
    c_to_cxx_cself = *static_cast<std::shared_ptr<iegen::example::nullable::Utils>*>(cself.ptr);
    const auto& result = c_to_cxx_cself->numDouble;
    
    int code_result = 0;
    CDataObj cxx_to_c_result = {code_result, const_cast<iegen::example::nullable::NumberDouble*>(result)};
    return cxx_to_c_result;
}
void _prop_set_NullableUtils_numDouble(CDataObj cself, CDataObj numDouble){
    
    std::shared_ptr<iegen::example::nullable::Utils> c_to_cxx_cself;
    c_to_cxx_cself = *static_cast<std::shared_ptr<iegen::example::nullable::Utils>*>(cself.ptr);
    
    auto c_to_cxx_numDouble = static_cast<iegen::example::nullable::NumberDouble*>(numDouble.ptr);
    c_to_cxx_cself->numDouble = c_to_cxx_numDouble;
}

CDataObj _prop_get_NullableUtils_numInt(CDataObj cself){
    std::shared_ptr<iegen::example::nullable::Utils> c_to_cxx_cself;
    c_to_cxx_cself = *static_cast<std::shared_ptr<iegen::example::nullable::Utils>*>(cself.ptr);
    const auto& result = c_to_cxx_cself->numInt;
    
    int code_result = 0;
    void* cxx_to_c_result_ptr;
    cxx_to_c_result_ptr = reinterpret_cast<void*>(new std::shared_ptr<iegen::example::nullable::NumberInt>(result));
    CDataObj cxx_to_c_result = {code_result, cxx_to_c_result_ptr};
    return cxx_to_c_result;
}
void _prop_set_NullableUtils_numInt(CDataObj cself, CDataObj numInt){
    
    std::shared_ptr<iegen::example::nullable::Utils> c_to_cxx_cself;
    c_to_cxx_cself = *static_cast<std::shared_ptr<iegen::example::nullable::Utils>*>(cself.ptr);
    
    std::shared_ptr<iegen::example::nullable::NumberInt> c_to_cxx_numInt;
    c_to_cxx_numInt = *static_cast<std::shared_ptr<iegen::example::nullable::NumberInt>*>(numInt.ptr);
    c_to_cxx_cself->numInt = c_to_cxx_numInt;
}
