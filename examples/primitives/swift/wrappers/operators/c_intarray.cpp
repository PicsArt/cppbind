/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 11/30/2021-09:10.
 * Please do not change it manually.
 */

#include <string.h>
#include <cxxabi.h>
#include <memory>
#include "swift/wrappers/operators/c_intarray.h"
#include "cxx/operators/intarray.hpp"

using namespace iegen::example;

void release_IntArrayImpl(CDataObj cself){
    delete static_cast<iegen::example::IntArray*>(cself.ptr);
}

CDataObj create_IntArray(){
    auto this_object = new iegen::example::IntArray();
    return {0, this_object};
}


int _func_IntArray_operator_getitem_(CDataObj cself,int i) {
    
    
    auto c_to_cxx_cself = static_cast<iegen::example::IntArray*>(cself.ptr);
    const auto& result = c_to_cxx_cself->operator[](i);
    
    return result;
}
void _func_IntArray_operator_setitem_(CDataObj cself, int i, int value) {
    
    
    
    
    auto c_to_cxx_cself = static_cast<iegen::example::IntArray*>(cself.ptr);
    c_to_cxx_cself->operator[](i) = value;
}


int _func_IntArray_operator_getitem__1(CDataObj cself,char* _Nonnull i) {
    auto c_to_cxx_i = std::string(i);
    free(i);
    
    auto c_to_cxx_cself = static_cast<iegen::example::IntArray*>(cself.ptr);
    const auto& result = c_to_cxx_cself->operator[](c_to_cxx_i);
    
    return result;
}


int _func_IntArray_operator_getitem__2(CDataObj cself,double i) {
    
    
    auto c_to_cxx_cself = static_cast<iegen::example::IntArray*>(cself.ptr);
    const auto& result = c_to_cxx_cself->operator[](i);
    
    return result;
}