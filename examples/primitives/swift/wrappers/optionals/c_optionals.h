/**
 *   ______ .______   .______   .______    __  .__   __.  _______  
 *  /      ||   _  \  |   _  \  |   _  \  |  | |  \ |  | |       \ 
 * |  ,----'|  |_)  | |  |_)  | |  |_)  | |  | |   \|  | |  .--.  |
 * |  |     |   ___/  |   ___/  |   _  <  |  | |  . `  | |  |  |  |
 * |  `----.|  |      |  |      |  |_)  | |  | |  |\   | |  '--'  |
 *  \______|| _|      | _|      |______/  |__| |__| \__| |_______/ 
 * 
 * This file is generated by cppbind on 05/12/2022-10:26.
 * Please do not change it manually.
 */

#ifndef _C_optionals_WRAPPER_
#define _C_optionals_WRAPPER_

#include "swift/wrappers/c_helpers.h"

#include <stdbool.h>

#if __cplusplus
extern "C" {
#endif
    void release_CppbindExample_Optionals(CppBindCObject cself, bool owner);
    CppBindCObject _func_CppbindExample_Optionals_optionalPtrWithNullptrDefault(CppBindCObject cself, CppBindCObject  task, CppBindCObject* _Nonnull cppbind_err);
    CppBindCObject _func_CppbindExample_Optionals_optionalPtrWithNullDefault(CppBindCObject cself, CppBindCObject  task, CppBindCObject* _Nonnull cppbind_err);
    int _func_CppbindExample_Optionals_optionalIntWithDefault(CppBindCObject cself, int  value, CppBindCObject* _Nonnull cppbind_err);
    long _func_CppbindExample_Optionals_optionalLongWithDefault(CppBindCObject cself, long  value, CppBindCObject* _Nonnull cppbind_err);
    double _func_CppbindExample_Optionals_optionalDoubleWithDefault(CppBindCObject cself, double  value, CppBindCObject* _Nonnull cppbind_err);
    float _func_CppbindExample_Optionals_optionalFloatWithDefault(CppBindCObject cself, float  value, CppBindCObject* _Nonnull cppbind_err);
    bool _func_CppbindExample_Optionals_optionalBoolWithDefault(CppBindCObject cself, bool  value, CppBindCObject* _Nonnull cppbind_err);
    char* _Nonnull _func_CppbindExample_Optionals_optionalStringWithDefault(CppBindCObject cself, char* _Nonnull optional_str, CppBindCObject* _Nonnull cppbind_err);
    char _func_CppbindExample_Optionals_optionalCharWithDefault(CppBindCObject cself, char  symbol, CppBindCObject* _Nonnull cppbind_err);
    unsigned char _func_CppbindExample_Optionals_optionalUnsignedCharWithDefault(CppBindCObject cself, unsigned char  num, CppBindCObject* _Nonnull cppbind_err);
    const char * _Nonnull _func_CppbindExample_Optionals_optionalCharPointerWithDefault(CppBindCObject cself, const char * _Nonnull optional_str, CppBindCObject* _Nonnull cppbind_err);
    int _func_CppbindExample_Optionals_optionalEnumWithDefault(CppBindCObject cself, int  c, CppBindCObject* _Nonnull cppbind_err);
    CppBindCObject _func_CppbindExample_Optionals_singleComplexDefaultValue_1(CppBindCObject cself, CppBindCObject* _Nonnull cppbind_err);
    CppBindCObject _func_CppbindExample_Optionals_singleComplexDefaultValue(CppBindCObject cself, CppBindCObject  task, CppBindCObject* _Nonnull cppbind_err);
    char* _Nonnull _func_CppbindExample_Optionals_multipleMixedDefaultValues_1(CppBindCObject cself, CppBindCObject* _Nonnull cppbind_err);
    char* _Nonnull _func_CppbindExample_Optionals_multipleMixedDefaultValues_2(CppBindCObject cself, CppBindCObject  task, int  i, CppBindCObject* _Nonnull cppbind_err);
    char* _Nonnull _func_CppbindExample_Optionals_multipleMixedDefaultValues(CppBindCObject cself, CppBindCObject  task, int  i, CppBindCObject  r, CppBindCObject* _Nonnull cppbind_err);

    CppBindCObject create_CppbindExample_Optionals_1(CppBindCObject* _Nonnull cppbind_err);

    CppBindCObject create_CppbindExample_Optionals_2(CppBindCObject task, int i, CppBindCObject* _Nonnull cppbind_err);

    CppBindCObject create_CppbindExample_Optionals(CppBindCObject task, int i, CppBindCObject r, CppBindCObject* _Nonnull cppbind_err);
    int _func_CppbindExample_Optionals_optionalEnumWithDefaultAndFieldPrefix(CppBindCObject cself, int  c, CppBindCObject* _Nonnull cppbind_err);
    int _func_CppbindExample_Optionals_optionalEnumWithInternalDefault(CppBindCObject cself, int  c, CppBindCObject* _Nonnull cppbind_err);
    char* _Nonnull _func_CppbindExample_Optionals_optionalStringViewWithDefault(CppBindCObject cself, char* _Nonnull optional_str, CppBindCObject* _Nonnull cppbind_err);
    CppBindCObject _func_CppbindExample_Optionals_optionalFDPtrWithNullptrDefault(CppBindCObject cself, CppBindCObject  project, CppBindCObject* _Nonnull cppbind_err);
    CppBindCObject _func_CppbindExample_Optionals_optionalSharedPtrWithNullptrDefault(CppBindCObject cself, CppBindCObject  person, CppBindCObject* _Nonnull cppbind_err);
#if __cplusplus
}
#endif
#endif /* ifndef _C_optionals_WRAPPER_ */
