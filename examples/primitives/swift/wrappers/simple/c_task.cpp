/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 12/07/2021-15:55.
 * Please do not change it manually.
 */

#include <string.h>
#include <cxxabi.h>
#include <memory>
#include "swift/wrappers/simple/c_task.h"
#include "cxx/simple/task.hpp"

using namespace iegen::example;

void release_Task(CObject cself, bool owner) {
    delete cself.type;
    if (owner) {
        delete static_cast<iegen::example::Task*>(cself.ptr);
    }
}

CObject create_Task(char* _Nonnull title, ErrorObj* _Nonnull err){
    auto c_to_cxx_title = std::string(title);
    free(title);
    try {
        auto this_object = new iegen::example::Task(c_to_cxx_title);
        return {strdup("iegen::example::Task"), this_object};
    }
    catch (const std::exception& e) {
        err->err_type = 1;
        err->err_ptr = new std::exception(e);
    }
    catch (...) {
        err->err_type = -1;
    }
    CObject result{};
    return result;
}

char* _Nonnull _prop_get_Task_title(CObject cself){
    auto c_to_cxx_cself = static_cast<iegen::example::Task*>(cself.ptr);
    const auto& result = c_to_cxx_cself->title();
    auto cxx_to_c_result = strdup(result.data());
    return cxx_to_c_result;
}

void _func_Task_setTitle(CObject cself, char* _Nonnull title, ErrorObj* _Nonnull err){
    auto c_to_cxx_title = std::string(title);
    free(title);
  
    
    auto c_to_cxx_cself = static_cast<iegen::example::Task*>(cself.ptr);
    try {
        c_to_cxx_cself->setTitle(c_to_cxx_title);
    }
    catch (const std::exception& e) {
        err->err_type = 1;
        err->err_ptr = new std::exception(e);
    }
    catch (...) {
        err->err_type = -1;
    }
}