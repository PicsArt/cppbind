/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 01/21/2022-14:19.
 * Please do not change it manually.
 */

#include <iostream>
#include <string.h>
#include <cxxabi.h>
#include <memory>
#include "swift/wrappers/templates/c_component.h"
#include "cxx/templates/component.hpp"
#include "cxx/templates/addressable.hpp"
#include "cxx/simple/root.hpp"

using namespace iegen::example;

void release_Component(CObject cself, bool owner) {
    delete cself.type;
    if (owner) {
        delete static_cast<std::shared_ptr<iegen::example::Component>*>(cself.ptr);
    }
}

CObject create_Component(CObject parent, char* _Nonnull name, ErrorObj* _Nonnull err){
    
    iegen::example::Root* ctocxxparent_ptr = nullptr;
    if (parent.ptr) {
        if (strcmp(parent.type, "iegen::example::Root") == 0)
            ctocxxparent_ptr = static_cast<iegen::example::Root*>(parent.ptr);
        else {
            std::cerr << "Unexpected object type: " << parent.type << std::endl;
            exit(1);
        }
    }
    auto& ctocxxparent = *ctocxxparent_ptr;
    auto ctocxxname = std::string(name);
    free(name);
    try {
        auto this_object = new iegen::example::Component(ctocxxparent, ctocxxname);
        return {strdup("iegen::example::Component"), new std::shared_ptr<iegen::example::Component>(this_object)};
    }
    catch (const std::exception& e) {
        err->err_type = 1;
        err->err_ptr = new std::exception(e);
    }
    catch (...) {
        err->err_type = -1;
    }
    CObject result{};
    return result;
}
