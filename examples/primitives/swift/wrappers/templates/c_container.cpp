/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 01/31/2022-10:17.
 * Please do not change it manually.
 */

#include <stdlib.h>
#include <string.h>
#include <cxxabi.h>
#include <memory>
#include "swift/wrappers/templates/c_container.h"
#include "cxx/templates/container.hpp"

using namespace iegen::example;

void release_ContainerImpl(IEGenCObject cself, bool owner){
    free(cself.type);
    if (owner) {
        delete static_cast<iegen::example::Container*>(cself.ptr);
    }
}
void release_ContainerHolder(IEGenCObject cself, bool owner) {
    free(cself.type);
    if (owner) {
        delete static_cast<iegen::example::ContainerHolder*>(cself.ptr);
    }
}

IEGenCObject create_ContainerHolder(IEGenCObject container, IEGenCErrorObj* _Nonnull err){
    
    auto ctocxxcontainer = static_cast<iegen::example::Container*>(container.ptr);
    try {
        auto this_object = new iegen::example::ContainerHolder(ctocxxcontainer);
        return {strdup("iegen::example::ContainerHolder"), this_object};
    }
    catch (const std::exception& e) {
        err->err_type = 1;
        err->err_ptr = new std::exception(e);
    }
    catch (...) {
        err->err_type = -1;
    }
    IEGenCObject result {};
    return result;
}

IEGenCObject _prop_get_ContainerHolder_container(IEGenCObject cself){
    auto ctocxxcself = static_cast<iegen::example::ContainerHolder*>(cself.ptr);
    const auto& result = ctocxxcself->container();
    
    char* type_result = nullptr;
    const char * name_result = typeid(*result).name();
    int status = 0;
    char* demangled_result = abi::__cxa_demangle(name_result, NULL, NULL, &status);
    if (status == 0) {
        type_result = demangled_result;
    } else {
        type_result = strdup("iegen::example::Container");
    }
    IEGenCObject cxxtocresult = {type_result, const_cast<iegen::example::Container*>(result)};
    return cxxtocresult;
}
