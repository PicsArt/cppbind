/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 12/01/2021-14:55.
 * Please do not change it manually.
 */

#include <string.h>
#include <cxxabi.h>
#include <memory>
#include "swift/wrappers/templates/c_container.h"
#include "cxx/templates/container.hpp"

using namespace iegen::example;

void release_ContainerImpl(CDataObj cself){
    delete static_cast<iegen::example::Container*>(cself.ptr);
}
void release_ContainerHolder(CDataObj cself) {
    delete static_cast<iegen::example::ContainerHolder*>(cself.ptr);
}

CDataObj create_ContainerHolder(CDataObj container){
    
    auto c_to_cxx_container = static_cast<iegen::example::Container*>(container.ptr);
    auto this_object = new iegen::example::ContainerHolder(c_to_cxx_container);
    return {0, this_object};
}

CDataObj _prop_get_ContainerHolder_container(CDataObj cself){
    auto c_to_cxx_cself = static_cast<iegen::example::ContainerHolder*>(cself.ptr);
    const auto& result = c_to_cxx_cself->container();
    
    int code_result = 0;
    int status = 0;
    const char * name = typeid(*result).name();
    char* res = abi::__cxa_demangle(name, NULL, NULL, &status);
    std::string demangled_result = (status==0) ? res : name;
    free(res);
    if (demangled_result == "iegen::example::Stack<iegen::example::Project>") {
        code_result = 1;
    } else if (demangled_result == "iegen::example::Stack<iegen::example::Task>") {
        code_result = 2;
    } else if (demangled_result == "iegen::example::Stack<iegen::example::Number<int>>") {
        code_result = 3;
    } 
    CDataObj cxx_to_c_result = {code_result, const_cast<iegen::example::Container*>(result)};
    return cxx_to_c_result;
}