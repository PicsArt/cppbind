/**
 *   ______ .______   .______   .______    __  .__   __.  _______  
 *  /      ||   _  \  |   _  \  |   _  \  |  | |  \ |  | |       \ 
 * |  ,----'|  |_)  | |  |_)  | |  |_)  | |  | |   \|  | |  .--.  |
 * |  |     |   ___/  |   ___/  |   _  <  |  | |  . `  | |  |  |  |
 * |  `----.|  |      |  |      |  |_)  | |  | |  |\   | |  '--'  |
 *  \______|| _|      | _|      |______/  |__| |__| \__| |_______/ 
 * 
 * This file is generated by cppbind on 05/12/2022-10:26.
 * Please do not change it manually.
 */

#ifndef _C_stack_WRAPPER_
#define _C_stack_WRAPPER_

#include "swift/wrappers/c_helpers.h"

#include <stdbool.h>

#if __cplusplus
extern "C" {
#endif
    void release_CppbindExample_StackPrj(CppBindCObject cself, bool owner);

    CppBindCObject create_CppbindExample_StackPrj(CppBindCObject* _Nonnull cppbind_err);

    CppBindCObject create_CppbindExample_StackPrj_1(CppBindCObject st, CppBindCObject* _Nonnull cppbind_err);
    void _func_CppbindExample_StackPrj_push(CppBindCObject cself, CppBindCObject  item, CppBindCObject* _Nonnull cppbind_err);
    void _func_CppbindExample_StackPrj_pop(CppBindCObject cself, CppBindCObject* _Nonnull cppbind_err);
    CppBindCObject _func_CppbindExample_StackPrj_top(CppBindCObject cself, CppBindCObject* _Nonnull cppbind_err);
    bool _func_CppbindExample_StackPrj_empty(CppBindCObject cself, CppBindCObject* _Nonnull cppbind_err);
    void release_CppbindExample_StackTask(CppBindCObject cself, bool owner);

    CppBindCObject create_CppbindExample_StackTask(CppBindCObject* _Nonnull cppbind_err);

    CppBindCObject create_CppbindExample_StackTask_1(CppBindCObject st, CppBindCObject* _Nonnull cppbind_err);
    void _func_CppbindExample_StackTask_push(CppBindCObject cself, CppBindCObject  item, CppBindCObject* _Nonnull cppbind_err);
    void _func_CppbindExample_StackTask_pop(CppBindCObject cself, CppBindCObject* _Nonnull cppbind_err);
    CppBindCObject _func_CppbindExample_StackTask_top(CppBindCObject cself, CppBindCObject* _Nonnull cppbind_err);
    bool _func_CppbindExample_StackTask_empty(CppBindCObject cself, CppBindCObject* _Nonnull cppbind_err);
    void release_CppbindExample_StackNumInt(CppBindCObject cself, bool owner);

    CppBindCObject create_CppbindExample_StackNumInt(CppBindCObject* _Nonnull cppbind_err);

    CppBindCObject create_CppbindExample_StackNumInt_1(CppBindCObject st, CppBindCObject* _Nonnull cppbind_err);
    void _func_CppbindExample_StackNumInt_push(CppBindCObject cself, CppBindCObject  item, CppBindCObject* _Nonnull cppbind_err);
    void _func_CppbindExample_StackNumInt_pop(CppBindCObject cself, CppBindCObject* _Nonnull cppbind_err);
    CppBindCObject _func_CppbindExample_StackNumInt_top(CppBindCObject cself, CppBindCObject* _Nonnull cppbind_err);
    bool _func_CppbindExample_StackNumInt_empty(CppBindCObject cself, CppBindCObject* _Nonnull cppbind_err);
#if __cplusplus
}
#endif
#endif /* ifndef _C_stack_WRAPPER_ */
