/**
 *   ______ .______   .______   .______    __  .__   __.  _______  
 *  /      ||   _  \  |   _  \  |   _  \  |  | |  \ |  | |       \ 
 * |  ,----'|  |_)  | |  |_)  | |  |_)  | |  | |   \|  | |  .--.  |
 * |  |     |   ___/  |   ___/  |   _  <  |  | |  . `  | |  |  |  |
 * |  `----.|  |      |  |      |  |_)  | |  | |  |\   | |  '--'  |
 *  \______|| _|      | _|      |______/  |__| |__| \__| |_______/ 
 * 
 * This file is generated by cppbind on 06/30/2022-07:37.
 * Please do not change it manually.
 */

#ifndef _SWIFT_WRAPPERS_TEMPLATES_C_SWIFT_ARRAY_H_
#define _SWIFT_WRAPPERS_TEMPLATES_C_SWIFT_ARRAY_H_

#include "swift/wrappers/c_helpers.h"

#include <stdbool.h>

#if __cplusplus
extern "C" {
#endif
    void release_CppbindExample_ArrayFloat2(CppBindCObject cself, bool owner);

    CppBindCObject create_CppbindExample_ArrayFloat2(CppBindCObject array, CppBindCObject* _Nonnull cppbind_err);

    CppBindCObject create_CppbindExample_ArrayFloat2_1(CppBindCDataArray array, CppBindCObject* _Nonnull cppbind_err);


    float _func_CppbindExample_ArrayFloat2__getitem_(CppBindCObject cself, int  idx);


    void _func_CppbindExample_ArrayFloat2__setitem_(CppBindCObject cself, int idx, float value);
    CppBindCObject _func_CppbindExample_ArrayFloat2__add_(CppBindCObject cself, CppBindCObject  rhs, CppBindCObject* _Nonnull cppbind_err);
    CppBindCObject _func_CppbindExample_ArrayFloat2__sub_(CppBindCObject cself, CppBindCObject  rhs, CppBindCObject* _Nonnull cppbind_err);
    bool _func_CppbindExample_ArrayFloat2__eq_(CppBindCObject cself, CppBindCObject  rhs, CppBindCObject* _Nonnull cppbind_err);
    bool _func_CppbindExample_ArrayFloat2__ne_(CppBindCObject cself, CppBindCObject  rhs, CppBindCObject* _Nonnull cppbind_err);
    CppBindCDataArray _func_CppbindExample_ArrayFloat2_data(CppBindCObject cself, CppBindCObject* _Nonnull cppbind_err);
    void release_CppbindExample_ArrayFloat3(CppBindCObject cself, bool owner);

    CppBindCObject create_CppbindExample_ArrayFloat3(CppBindCObject array, CppBindCObject* _Nonnull cppbind_err);

    CppBindCObject create_CppbindExample_ArrayFloat3_1(CppBindCDataArray array, CppBindCObject* _Nonnull cppbind_err);


    float _func_CppbindExample_ArrayFloat3__getitem_(CppBindCObject cself, int  idx);


    void _func_CppbindExample_ArrayFloat3__setitem_(CppBindCObject cself, int idx, float value);
    CppBindCObject _func_CppbindExample_ArrayFloat3__add_(CppBindCObject cself, CppBindCObject  rhs, CppBindCObject* _Nonnull cppbind_err);
    CppBindCObject _func_CppbindExample_ArrayFloat3__sub_(CppBindCObject cself, CppBindCObject  rhs, CppBindCObject* _Nonnull cppbind_err);
    bool _func_CppbindExample_ArrayFloat3__eq_(CppBindCObject cself, CppBindCObject  rhs, CppBindCObject* _Nonnull cppbind_err);
    bool _func_CppbindExample_ArrayFloat3__ne_(CppBindCObject cself, CppBindCObject  rhs, CppBindCObject* _Nonnull cppbind_err);
    CppBindCDataArray _func_CppbindExample_ArrayFloat3_data(CppBindCObject cself, CppBindCObject* _Nonnull cppbind_err);
    void release_CppbindExample_ArrayInt2(CppBindCObject cself, bool owner);

    CppBindCObject create_CppbindExample_ArrayInt2(CppBindCObject array, CppBindCObject* _Nonnull cppbind_err);

    CppBindCObject create_CppbindExample_ArrayInt2_1(CppBindCDataArray array, CppBindCObject* _Nonnull cppbind_err);


    int _func_CppbindExample_ArrayInt2__getitem_(CppBindCObject cself, int  idx);


    void _func_CppbindExample_ArrayInt2__setitem_(CppBindCObject cself, int idx, int value);
    CppBindCObject _func_CppbindExample_ArrayInt2__add_(CppBindCObject cself, CppBindCObject  rhs, CppBindCObject* _Nonnull cppbind_err);
    CppBindCObject _func_CppbindExample_ArrayInt2__sub_(CppBindCObject cself, CppBindCObject  rhs, CppBindCObject* _Nonnull cppbind_err);
    bool _func_CppbindExample_ArrayInt2__eq_(CppBindCObject cself, CppBindCObject  rhs, CppBindCObject* _Nonnull cppbind_err);
    bool _func_CppbindExample_ArrayInt2__ne_(CppBindCObject cself, CppBindCObject  rhs, CppBindCObject* _Nonnull cppbind_err);
    CppBindCDataArray _func_CppbindExample_ArrayInt2_data(CppBindCObject cself, CppBindCObject* _Nonnull cppbind_err);
    void release_CppbindExample_ArrayInt3(CppBindCObject cself, bool owner);

    CppBindCObject create_CppbindExample_ArrayInt3(CppBindCObject array, CppBindCObject* _Nonnull cppbind_err);

    CppBindCObject create_CppbindExample_ArrayInt3_1(CppBindCDataArray array, CppBindCObject* _Nonnull cppbind_err);


    int _func_CppbindExample_ArrayInt3__getitem_(CppBindCObject cself, int  idx);


    void _func_CppbindExample_ArrayInt3__setitem_(CppBindCObject cself, int idx, int value);
    CppBindCObject _func_CppbindExample_ArrayInt3__add_(CppBindCObject cself, CppBindCObject  rhs, CppBindCObject* _Nonnull cppbind_err);
    CppBindCObject _func_CppbindExample_ArrayInt3__sub_(CppBindCObject cself, CppBindCObject  rhs, CppBindCObject* _Nonnull cppbind_err);
    bool _func_CppbindExample_ArrayInt3__eq_(CppBindCObject cself, CppBindCObject  rhs, CppBindCObject* _Nonnull cppbind_err);
    bool _func_CppbindExample_ArrayInt3__ne_(CppBindCObject cself, CppBindCObject  rhs, CppBindCObject* _Nonnull cppbind_err);
    CppBindCDataArray _func_CppbindExample_ArrayInt3_data(CppBindCObject cself, CppBindCObject* _Nonnull cppbind_err);

    float _func_CppbindExample_getFirstElementFloat(CppBindCObject  a, CppBindCObject* _Nonnull cppbind_err);

    int _func_CppbindExample_getFirstElementInt(CppBindCObject  a, CppBindCObject* _Nonnull cppbind_err);

    CppBindCObject _func_CppbindExample_multiplyElements(CppBindCObject  a, int  num, CppBindCObject* _Nonnull cppbind_err);

    CppBindCObject _func_CppbindExample_addToElements(CppBindCObject  a, int  num, CppBindCObject* _Nonnull cppbind_err);

    CppBindCObject _func_CppbindExample_addToElements_1(CppBindCObject  a, int  num, CppBindCObject* _Nonnull cppbind_err);
    void release_CppbindExample_Array3(CppBindCObject cself, bool owner);

    CppBindCObject create_CppbindExample_Array3(CppBindCDataArray arr, CppBindCObject* _Nonnull cppbind_err);
#if __cplusplus
}
#endif
#endif /* ifndef _SWIFT_WRAPPERS_TEMPLATES_C_SWIFT_ARRAY_H_ */
