/**
 * ,--.,------. ,----.   ,------.,--.  ,--. 
 * |  ||  .---''  .-.|   |  .---'|  ,'.|  | 
 * |  ||  `--, |  | .---.|  `--, |  |' '  | 
 * |  ||  `---.'  '--'  ||  `---.|  | `   | 
 * `--'`------' `------' `------'`--'  `--' 
 * 
 * This file is generated by iegen on 02/22/2022-14:00.
 * Please do not change it manually.
 */

package com.hello_user.iegen.exception_helpers

import com.hello_user.iegen.alias.*
import com.hello_user.iegen.exceptionUtils.*
import com.hello_user.iegen.exception_helpers.*

open class StdException
internal constructor(_id: Long, _owner: Boolean = false) : AutoCloseable, Exception() {
    companion object {
        init {
            System.loadLibrary("wrapper_jni")
        }
        
    }
    
    protected var objId = _id
    protected val owner = _owner
    private var refs: MutableList<Any> = mutableListOf()

    fun keepIEGenReference(ref: Any) {
        refs.add(ref)
    }
    
    open val id: Long
        get() {
            if (objId == 0L) {
                throw RuntimeException("Object is not allocated")
            }
            return objId
        }
    
    open fun what(): String {
        val result = jWhat(id)
        
        return result
    }

    override fun close() {
        if (owner && objId != 0L) {
            jFinalize(objId)
            objId = 0L
        }
    }

    /**
     * Finalize and deletes the object
     */
    protected fun finalize() {
        close()
    }

    ///// External wrapper functions ////////////
    private external fun jWhat(id: Long): String
    private external fun jFinalize(id: Long): Unit
}

open class StdLogicError
internal constructor(_id: Long, _owner: Boolean = false) : StdException(_id, _owner) {
    companion object {
        
    }
    
}

open class StdRuntimeError
internal constructor(_id: Long, _owner: Boolean = false) : StdException(_id, _owner) {
    companion object {
        
    }
    
}

open class StdDomainError
internal constructor(_id: Long, _owner: Boolean = false) : StdLogicError(_id, _owner) {
    companion object {
        
    }
    
}

open class StdInvalidArgument
internal constructor(_id: Long, _owner: Boolean = false) : StdLogicError(_id, _owner) {
    companion object {
        
    }
    
}

open class StdLengthError
internal constructor(_id: Long, _owner: Boolean = false) : StdLogicError(_id, _owner) {
    companion object {
        
    }
    
}

open class StdOutOfRange
internal constructor(_id: Long, _owner: Boolean = false) : StdLogicError(_id, _owner) {
    companion object {
        
    }
    
}

open class StdRangeError
internal constructor(_id: Long, _owner: Boolean = false) : StdRuntimeError(_id, _owner) {
    companion object {
        
    }
    
}

open class StdOverflowError
internal constructor(_id: Long, _owner: Boolean = false) : StdRuntimeError(_id, _owner) {
    companion object {
        
    }
    
}

open class StdUnderflowError
internal constructor(_id: Long, _owner: Boolean = false) : StdRuntimeError(_id, _owner) {
    companion object {
        
    }
    
}

open class StdBadAlloc
internal constructor(_id: Long, _owner: Boolean = false) : StdException(_id, _owner) {
    companion object {
        
    }
    
}

open class StdBadCast
internal constructor(_id: Long, _owner: Boolean = false) : StdException(_id, _owner) {
    companion object {
        
    }
    
}

open class StdBadTypeId
internal constructor(_id: Long, _owner: Boolean = false) : StdException(_id, _owner) {
    companion object {
        
    }
    
}

private external fun jGettypebyid(id: Long): String
